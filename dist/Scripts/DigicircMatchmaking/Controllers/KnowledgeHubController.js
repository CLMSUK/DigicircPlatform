var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
var directiveScopeReadyLimit = 10;
var directiveScopeReadyTimeout = 200;
var DigicircMatchmaking;
(function (DigicircMatchmaking) {
    var Controllers;
    (function (Controllers) {
        var KnowledgeHubConditionalFormattings = [];
        var KnowledgeHubDataValidations = [];
        var KnowledgeHubCalculatedExpressions = [];
        // Datasets Column Info
        Controllers.MaterialDataSet_ColumnInfo = [new Joove.ColumnInfo("Name", "string", null, false),
            new Joove.ColumnInfo("original", "Material", null, false)];
        window["MaterialDataSet_ColumnInfo"] = Controllers.MaterialDataSet_ColumnInfo;
        var KnowledgeHubProductDatasetViewModelDataset = /** @class */ (function (_super) {
            __extends(KnowledgeHubProductDatasetViewModelDataset, _super);
            function KnowledgeHubProductDatasetViewModelDataset(model, partialViewControlName) {
                if (partialViewControlName === void 0) { partialViewControlName = null; }
                var _this = _super.call(this, model, partialViewControlName) || this;
                _this.limit = 0;
                return _this;
            }
            KnowledgeHubProductDatasetViewModelDataset.prototype.Filter = function (inputs) {
                var $scope = { model: this.model };
                return function (DataItem, index, items) {
                    return true;
                };
            };
            KnowledgeHubProductDatasetViewModelDataset.prototype.PackInputs = function ($control) {
                return Joove.DatasourceManager.getDatasetControlInputs($control);
            };
            KnowledgeHubProductDatasetViewModelDataset.prototype.Sort = function (items) {
                return items;
            };
            KnowledgeHubProductDatasetViewModelDataset.prototype.GetSource = function (parents) {
                return this.model.Actor.CircularEconomyRequirements.DesiredResources;
            };
            return KnowledgeHubProductDatasetViewModelDataset;
        }(Joove.IViewModelDataset));
        Controllers.KnowledgeHubProductDatasetViewModelDataset = KnowledgeHubProductDatasetViewModelDataset;
        // Datasets Projection Shemas
        window["TextBox_ProjectionScema"] = {};
        window["TextBox1_ProjectionScema"] = {};
        var KnowledgeHubController = /** @class */ (function () {
            function KnowledgeHubController($scope, $timeout) {
                this.$scope = $scope;
                this.controllerActionFinished = function (resetDirty) {
                    //window.scope_KnowledgeHub.model = window.scope_KnowledgeHub.dehydrate();
                    //window.scope_SymbiosisMasterPage.model = window.scope_KnowledgeHub.model;
                    DigicircMatchmaking.ViewModels.KnowledgeHub.KnowledgeHubViewModel._lightCast(window.scope_KnowledgeHub.model);
                    // Joove.Common.applyScope(window.scope_KnowledgeHub);
                    if (resetDirty) {
                        window._context.isDirty = false;
                    }
                    window._ruleEngine.update(Joove.EvaluationTimes.OnChange);
                };
                window.scope_KnowledgeHub = $scope;
                $scope.$onControlChanged = function (event, newValue, dontMakeDirty) {
                    Joove.Core.onChange(event.target, newValue, dontMakeDirty);
                };
                $scope.dehydrate = function (context) {
                    if (context === void 0) { context = null; }
                    return DigicircMatchmaking.ViewModels.KnowledgeHub.KnowledgeHubViewModel._initializeFrom($scope.model, context);
                };
                $scope._validationsMaster = window.scope_SymbiosisMasterPage._validations;
                $scope._validations = { summary: [],
                };
                this.init($scope, $timeout);
                $timeout(function () {
                    window._ruleEngine.update(Joove.EvaluationTimes.OnLoad, null, function () {
                        $("body").fadeIn(200);
                    });
                });
            }
            KnowledgeHubController.prototype.init = function ($scope, $timeout) {
                var _this = this;
                $scope.model = DigicircMatchmaking.ViewModels.KnowledgeHub.KnowledgeHubViewModel._initializeFrom(window.viewDTO.Model);
                window.scope_SymbiosisMasterPage.model = $scope.model;
                new Joove.ReferencesReconstructor().reconstructReferences($scope.model);
                $scope.trackObject = function (obj) { return Joove.Common.trackObject(obj); };
                //}
                $.connection['eventsHub'].on('__connectedEvent', function () { });
                $.connection['eventsHub'].on('forcePageReload', function () {
                    window.onbeforeunload = null;
                    setTimeout(function () {
                        window.location.reload();
                    }, 3000);
                });
                $.connection.hub.start().then(function () {
                    Joove.Common.getScope().connectedToSignals();
                    Joove.Common.getMasterScope().connectedToSignals();
                });
                $scope.connectedToSignals = function () {
                };
                // Event Listeners
                $scope.events = {};
                $scope.expressions = {};
                // Dataset Handler
                $scope.datasets = {
                    ProductDataset: function (partialViewControlName) {
                        if (partialViewControlName === void 0) { partialViewControlName = null; }
                        return new DigicircMatchmaking.Controllers.KnowledgeHubProductDatasetViewModelDataset($scope.model, partialViewControlName);
                    },
                };
                // Controller actions
                $scope.actions = {
                    Index: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            Joove.Core.executeRedirectControllerAction("KnowledgeHub", "Index", "GET", [], {}, _modalOptions);
                            return [2 /*return*/];
                        });
                    }); },
                    Search: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        var implementation, spamHelper;
                        var _this = this;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0:
                                    Joove.Common.autocompleteFix();
                                    implementation = function () { return __awaiter(_this, void 0, void 0, function () {
                                        return __generator(this, function (_a) {
                                            eval("update('" + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_KnowledgeHub"].model.Waste.Id; }, 0)) + "', '" + Joove.Common.safeNumber(Joove.Common.nullSafe(function () { return window["scope_KnowledgeHub"].model.Product.Id; }, 0)) + "')");
                                            return [2 /*return*/];
                                        });
                                    }); };
                                    spamHelper = new Joove.SpamControlHelper(_e);
                                    spamHelper.Disable();
                                    return [4 /*yield*/, implementation()];
                                case 1:
                                    _a.sent();
                                    spamHelper.Enable();
                                    this.controllerActionFinished(false);
                                    return [2 /*return*/];
                            }
                        });
                    }); },
                };
                // Events
                $scope.eventCallbacks = {
                    ButtonClicked: function (e, DataItem, _parents) {
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockButtonClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockButtonClicked);
                        }
                        _this.timeoutDelayLockButtonClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.Search(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                };
                // Rules
                window._ruleEngine.addDataValidations(KnowledgeHubDataValidations);
                window._ruleEngine.addConditionalFormattings(KnowledgeHubConditionalFormattings);
                window._ruleEngine.addCalculatedExpressions(KnowledgeHubCalculatedExpressions);
                window._commander.executeCommands(window.viewDTO.ClientCommands);
                window.viewDTO.ClientCommands = [];
                Joove.Common.setNumberLocalizationSettings();
                Joove.DeveloperApi.init($scope, window.scope_SymbiosisMasterPage);
                window.$formExtend && window.$formExtend();
                window.$onFormLoaded && window.$onFormLoaded();
            };
            return KnowledgeHubController;
        }());
        angular.module("Application").controller("KnowledgeHubController", ["$scope", "$timeout", KnowledgeHubController]);
    })(Controllers = DigicircMatchmaking.Controllers || (DigicircMatchmaking.Controllers = {}));
})(DigicircMatchmaking || (DigicircMatchmaking = {}));
