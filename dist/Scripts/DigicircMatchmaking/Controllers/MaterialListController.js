var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
var directiveScopeReadyLimit = 10;
var directiveScopeReadyTimeout = 200;
window.onbeforeunload = function (e) {
    if (window._context.isDirty) {
        var msg = window._resourcesManager.getGlobalResource("RES_WEBFORM_DirtyMessage");
        e.returnValue = msg; // Gecko, Trident, Chrome 34+
        return msg;
    }
};
var DigicircMatchmaking;
(function (DigicircMatchmaking) {
    var Controllers;
    (function (Controllers) {
        var MaterialListConditionalFormattings = [];
        Controllers.MaterialList_MaterialList_ConditionalFormattings = {
            ConditionalFormattingConditional: {
                'forRow': {
                    'whenTrue': ['ApplyCssClass|not-commited'], 'whenFalse': ['ApplyCssClass|commited']
                },
                'forColumns': {}
            },
        };
        var MaterialListDataValidations = [];
        var MaterialListCalculatedExpressions = [];
        // Datasets Column Info
        var MaterialList_ColumnInfo = [
            new Joove.Widgets.DataListColumnInfo({
                dataType: "string",
                dataTypeIsEnum: false,
                name: "Name",
                caption: window._resourcesManager.getDataListColumnCaption("MaterialList", "Name", false),
                groupable: true,
                searchable: true,
                visible: true,
                orderable: true,
                editable: false,
                style: "",
                classes: "",
                itemType: Joove.Widgets.DataListColumnItemType.TEXTBOX,
                importable: false,
                supportsAggregators: true,
                length: 2147483647,
                formatting: null,
                width: null,
                css: "",
                isEncrypted: false,
                showFullImage: false
            }),
            new Joove.Widgets.DataListColumnInfo({
                dataType: "string",
                dataTypeIsEnum: false,
                name: "Type.Name",
                caption: window._resourcesManager.getDataListColumnCaption("MaterialList", "Type.Name", false),
                groupable: true,
                searchable: true,
                visible: true,
                orderable: true,
                editable: false,
                style: "",
                classes: "",
                itemType: Joove.Widgets.DataListColumnItemType.TEXTBOX,
                importable: false,
                supportsAggregators: true,
                length: 100,
                formatting: null,
                width: null,
                css: "",
                isEncrypted: false,
                showFullImage: false
            }),
            new Joove.Widgets.DataListColumnInfo({
                dataType: "bool",
                dataTypeIsEnum: false,
                name: "PendingGraph",
                caption: window._resourcesManager.getDataListColumnCaption("MaterialList", "PendingGraph", false),
                groupable: true,
                searchable: true,
                visible: false,
                orderable: true,
                editable: false,
                style: "",
                classes: "",
                itemType: Joove.Widgets.DataListColumnItemType.TEXTBOX,
                importable: false,
                supportsAggregators: true,
                length: null,
                formatting: null,
                width: null,
                css: "",
                isEncrypted: false,
                showFullImage: false
            }),
            new Joove.Widgets.DataListColumnInfo({
                dataType: "int",
                dataTypeIsEnum: false,
                name: "Id",
                caption: window._resourcesManager.getDataListColumnCaption("MaterialList", "Id", false),
                groupable: true,
                searchable: true,
                visible: false,
                orderable: true,
                editable: false,
                style: "",
                classes: "",
                itemType: Joove.Widgets.DataListColumnItemType.TEXTBOX,
                importable: false,
                supportsAggregators: true,
                length: null,
                formatting: null,
                width: null,
                css: "",
                isEncrypted: false,
                showFullImage: false
            }),
            new Joove.Widgets.DataListColumnInfo({
                dataType: "bool",
                dataTypeIsEnum: false,
                name: "IsHazardous",
                caption: window._resourcesManager.getDataListColumnCaption("MaterialList", "IsHazardous", false),
                groupable: true,
                searchable: true,
                visible: false,
                orderable: true,
                editable: false,
                style: "",
                classes: "",
                itemType: Joove.Widgets.DataListColumnItemType.TEXTBOX,
                importable: false,
                supportsAggregators: true,
                length: null,
                formatting: null,
                width: null,
                css: "",
                isEncrypted: false,
                showFullImage: false
            }),
            new Joove.Widgets.DataListColumnInfo({
                dataType: "string",
                dataTypeIsEnum: false,
                name: "Description",
                caption: window._resourcesManager.getDataListColumnCaption("MaterialList", "Description", false),
                groupable: true,
                searchable: true,
                visible: false,
                orderable: true,
                editable: false,
                style: "",
                classes: "",
                itemType: Joove.Widgets.DataListColumnItemType.TEXTBOX,
                importable: false,
                supportsAggregators: true,
                length: 2147483647,
                formatting: null,
                width: null,
                css: "",
                isEncrypted: false,
                showFullImage: false
            }),
            new Joove.Widgets.DataListColumnInfo({
                dataType: "string",
                dataTypeIsEnum: false,
                name: "HsSpecific",
                caption: window._resourcesManager.getDataListColumnCaption("MaterialList", "HsSpecific", false),
                groupable: true,
                searchable: true,
                visible: false,
                orderable: true,
                editable: false,
                style: "",
                classes: "",
                itemType: Joove.Widgets.DataListColumnItemType.TEXTBOX,
                importable: false,
                supportsAggregators: true,
                length: 2147483647,
                formatting: null,
                width: null,
                css: "",
                isEncrypted: false,
                showFullImage: false
            })
        ];
        window["MaterialList_ColumnInfo"] = MaterialList_ColumnInfo;
        // Datasets Projection Shemas
        window["MaterialList_ProjectionScema"] = {};
        var MaterialListController = /** @class */ (function () {
            function MaterialListController($scope, $timeout) {
                this.$scope = $scope;
                this.controllerActionFinished = function (resetDirty) {
                    //window.scope_MaterialList.model = window.scope_MaterialList.dehydrate();
                    //window.scope_SymbiosisMasterPage.model = window.scope_MaterialList.model;
                    DigicircMatchmaking.ViewModels.MaterialList.MaterialListViewModel._lightCast(window.scope_MaterialList.model);
                    // Joove.Common.applyScope(window.scope_MaterialList);
                    if (resetDirty) {
                        window._context.isDirty = false;
                    }
                    window._ruleEngine.update(Joove.EvaluationTimes.OnChange);
                };
                window.scope_MaterialList = $scope;
                $scope.$onControlChanged = function (event, newValue, dontMakeDirty) {
                    Joove.Core.onChange(event.target, newValue, dontMakeDirty);
                };
                $scope.dehydrate = function (context) {
                    if (context === void 0) { context = null; }
                    return DigicircMatchmaking.ViewModels.MaterialList.MaterialListViewModel._initializeFrom($scope.model, context);
                };
                $scope._validationsMaster = window.scope_SymbiosisMasterPage._validations;
                $scope._validations = { summary: [],
                };
                this.init($scope, $timeout);
                $timeout(function () {
                    window._ruleEngine.update(Joove.EvaluationTimes.OnLoad, null, function () {
                        $("body").fadeIn(200);
                    });
                });
            }
            MaterialListController.prototype.init = function ($scope, $timeout) {
                var _this = this;
                $scope.model = DigicircMatchmaking.ViewModels.MaterialList.MaterialListViewModel._initializeFrom(window.viewDTO.Model);
                window.scope_SymbiosisMasterPage.model = $scope.model;
                new Joove.ReferencesReconstructor().reconstructReferences($scope.model);
                $scope.trackObject = function (obj) { return Joove.Common.trackObject(obj); };
                //}
                $.connection['eventsHub'].on('__connectedEvent', function () { });
                $.connection['eventsHub'].on('forcePageReload', function () {
                    window.onbeforeunload = null;
                    setTimeout(function () {
                        window.location.reload();
                    }, 3000);
                });
                $.connection.hub.start().then(function () {
                    Joove.Common.getScope().connectedToSignals();
                    Joove.Common.getMasterScope().connectedToSignals();
                });
                $scope.connectedToSignals = function () {
                };
                // Event Listeners
                $scope.events = {};
                $scope.expressions = {};
                // Dataset Handler
                $scope.datasets = {};
                // Controller actions
                $scope.actions = {
                    Index: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            Joove.Core.executeRedirectControllerAction("MaterialList", "", "GET", [], {}, _modalOptions);
                            return [2 /*return*/];
                        });
                    }); },
                    SendToGraph: function (materials, _cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            Joove.Core.executeControllerActionNew({
                                verb: 'POST', controller: 'MaterialList', action: 'SendToGraph',
                                queryData: [], postData: { 'model': $scope.model, 'materials': materials },
                                cb: _cb, modalOptions: _modalOptions, event: _e
                            });
                            return [2 /*return*/];
                        });
                    }); },
                    ResetAll: function (_cb, _modalOptions, _e) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            Joove.Common.autocompleteFix();
                            Joove.Core.executeControllerActionNew({
                                verb: 'POST', controller: 'MaterialList', action: 'ResetAll',
                                queryData: [], postData: { 'model': $scope.model },
                                cb: _cb, modalOptions: _modalOptions, event: _e
                            });
                            return [2 /*return*/];
                        });
                    }); },
                };
                // Events
                $scope.eventCallbacks = {
                    AddNewClicked: function (e, DataItem, _parents) {
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockAddNewClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockAddNewClicked);
                        }
                        _this.timeoutDelayLockAddNewClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                //This is true only when the menu item is clicked programmatically
                                //and occurs when the middle mouse button click is triggered
                                var openInNewWindow = $(e.target).data("openInNewWindow") === true || undefined;
                                if (openInNewWindow)
                                    $(e.target).data("openInNewWindow", undefined);
                                Joove.Core.executeRedirectControllerAction("MaterialForm", "Add", "GET", [], null, null, openInNewWindow);
                            }, { groups: [], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    ModifyClicked: function (e, DataItem, _parents) {
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockModifyClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockModifyClicked);
                        }
                        _this.timeoutDelayLockModifyClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                //This is true only when the menu item is clicked programmatically
                                //and occurs when the middle mouse button click is triggered
                                var openInNewWindow = $(e.target).data("openInNewWindow") === true || undefined;
                                if (openInNewWindow)
                                    $(e.target).data("openInNewWindow", undefined);
                                Joove.Core.executeRedirectControllerAction("MaterialForm", "Edit", "GET", [Joove.Common.nullSafe(function () { return Joove.DatasourceManager.getSelectedItem($("[jb-id='MaterialList']"), e).Id; }, 0)], null, null, openInNewWindow);
                            }, { groups: [], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    SendToGraphClicked: function (e, DataItem, _parents) {
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockSendToGraphClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockSendToGraphClicked);
                        }
                        _this.timeoutDelayLockSendToGraphClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                var p_FormControls_MaterialList_FormControlsDefinition_MaterialList_ListControl_SelectedItems_MaterialViewModel = Joove.Common.nullSafe(function () { return Joove.DatasourceManager.getSelectedItems($("[jb-id='MaterialList']"), e); }, null);
                                if (eval("DigicircMatchmaking.ViewModels.MaterialList.FormControls_MaterialList_FormControlsDefinition_MaterialList_ListControl_SelectedItems_MaterialViewModel") != null && eval("DigicircMatchmaking.ViewModels.MaterialList.FormControls_MaterialList_FormControlsDefinition_MaterialList_ListControl_SelectedItems_MaterialViewModel._initializeFrom") != null) {
                                    var _initial = p_FormControls_MaterialList_FormControlsDefinition_MaterialList_ListControl_SelectedItems_MaterialViewModel;
                                    p_FormControls_MaterialList_FormControlsDefinition_MaterialList_ListControl_SelectedItems_MaterialViewModel = [];
                                    for (var _i = 0; _i < _initial.length; _i++) {
                                        var _temp = eval("DigicircMatchmaking.ViewModels.MaterialList.FormControls_MaterialList_FormControlsDefinition_MaterialList_ListControl_SelectedItems_MaterialViewModel._initializeFrom(_initial[_i])");
                                        p_FormControls_MaterialList_FormControlsDefinition_MaterialList_ListControl_SelectedItems_MaterialViewModel.push(_temp);
                                    }
                                }
                                $scope.actions.SendToGraph(p_FormControls_MaterialList_FormControlsDefinition_MaterialList_ListControl_SelectedItems_MaterialViewModel, null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                    ResetAllMenuItemClicked: function (e, DataItem, _parents) {
                        if (e != null) {
                            e.stopPropagation();
                            e.preventDefault();
                        }
                        if (_this.timeoutDelayLockResetAllMenuItemClicked != null) {
                            $timeout.cancel(_this.timeoutDelayLockResetAllMenuItemClicked);
                        }
                        _this.timeoutDelayLockResetAllMenuItemClicked = $timeout(function () {
                            Joove.Common.setControlKeyPressed(e, 0);
                            Joove.Common.setLastClickedElement(e);
                            Joove.Validation.Manager.validateFormAndExecute(function () {
                                $scope.actions.ResetAll(null, null, e);
                            }, { groups: [Joove.Validation.Constants.ALL_GROUPS], withDataValidationsCheck: false, withRequiredFieldsCheck: false });
                        }, 0);
                    },
                };
                // Rules
                window._ruleEngine.addDataValidations(MaterialListDataValidations);
                window._ruleEngine.addConditionalFormattings(MaterialListConditionalFormattings);
                window._ruleEngine.addCalculatedExpressions(MaterialListCalculatedExpressions);
                window._commander.executeCommands(window.viewDTO.ClientCommands);
                window.viewDTO.ClientCommands = [];
                Joove.Common.setNumberLocalizationSettings();
                Joove.DeveloperApi.init($scope, window.scope_SymbiosisMasterPage);
                window.$formExtend && window.$formExtend();
                window.$onFormLoaded && window.$onFormLoaded();
            };
            return MaterialListController;
        }());
        angular.module("Application").controller("MaterialListController", ["$scope", "$timeout", MaterialListController]);
    })(Controllers = DigicircMatchmaking.Controllers || (DigicircMatchmaking.Controllers = {}));
})(DigicircMatchmaking || (DigicircMatchmaking = {}));
