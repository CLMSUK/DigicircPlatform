var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
var DigicircMatchmaking;
(function (DigicircMatchmaking) {
    var ViewModels;
    (function (ViewModels) {
        var CompanyList;
        (function (CompanyList) {
            var CompanyListViewModel = /** @class */ (function (_super) {
                __extends(CompanyListViewModel, _super);
                function CompanyListViewModel() {
                    return _super.call(this) || this;
                }
                CompanyListViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.SelectedEntityType != null)
                        instance.SelectedEntityType = SelectedEntityType_EntityTypeViewModel._lightCast(instance.SelectedEntityType);
                    return instance;
                };
                CompanyListViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new CompanyListViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateCompanyListViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                CompanyListViewModel.prototype._hydrateCompanyListViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.SelectedEntityType !== undefined)
                        this.SelectedEntityType = SelectedEntityType_EntityTypeViewModel._initializeFrom(original.SelectedEntityType, ignoreReadOnlyProperties, context);
                    if (original.DropdownBox__InitialSelection !== undefined)
                        this.DropdownBox__InitialSelection = original.DropdownBox__InitialSelection;
                    this.DropdownBoxSelectedItemKeys = original.DropdownBoxSelectedItemKeys;
                    this.CompanyListSelectedItemKeys = original.CompanyListSelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = CompanyListViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        CompanyListViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                CompanyListViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = CompanyListViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    CompanyListViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                CompanyListViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    delete reduced.DropdownBox__InitialSelection;
                    DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                return CompanyListViewModel;
            }(DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel));
            CompanyList.CompanyListViewModel = CompanyListViewModel;
            var SelectedEntityType_EntityTypeViewModel = /** @class */ (function (_super) {
                __extends(SelectedEntityType_EntityTypeViewModel, _super);
                function SelectedEntityType_EntityTypeViewModel() {
                    return _super.call(this) || this;
                }
                SelectedEntityType_EntityTypeViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                SelectedEntityType_EntityTypeViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new SelectedEntityType_EntityTypeViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateSelectedEntityType_EntityTypeViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                SelectedEntityType_EntityTypeViewModel.prototype._hydrateSelectedEntityType_EntityTypeViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Code !== undefined)
                        this.Code = original.Code;
                    if (original.Value !== undefined)
                        this.Value = original.Value;
                    if (original.IsProvider !== undefined)
                        this.IsProvider = original.IsProvider;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = SelectedEntityType_EntityTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                SelectedEntityType_EntityTypeViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = SelectedEntityType_EntityTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return SelectedEntityType_EntityTypeViewModel;
            }(BaseClass.ViewModel));
            CompanyList.SelectedEntityType_EntityTypeViewModel = SelectedEntityType_EntityTypeViewModel;
        })(CompanyList = ViewModels.CompanyList || (ViewModels.CompanyList = {}));
    })(ViewModels = DigicircMatchmaking.ViewModels || (DigicircMatchmaking.ViewModels = {}));
})(DigicircMatchmaking || (DigicircMatchmaking = {}));
