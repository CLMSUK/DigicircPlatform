// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
namespace DigicircMatchmaking.ViewModels.GraphQueryDebug {
export class GraphQueryDebugViewModel extends DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Info != null)
            instance.Info = Info_GraphDebugResultViewModel._lightCast(instance.Info);
        return instance;
    }

    public static _initializeFrom(original: GraphQueryDebugViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): GraphQueryDebugViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        GraphQueryDebugViewModel = new GraphQueryDebugViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateGraphQueryDebugViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateGraphQueryDebugViewModel(original: GraphQueryDebugViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Info !== undefined) this.Info = Info_GraphDebugResultViewModel._initializeFrom(original.Info, ignoreReadOnlyProperties, context);
        if(original.CountryName !== undefined) this.CountryName = original.CountryName;
        if(original.IsExtended !== undefined) this.IsExtended = original.IsExtended;
        if (original.TextBox1__InitialSelection !== undefined) this.TextBox1__InitialSelection = original.TextBox1__InitialSelection;
        this.TextBox1SelectedItemKeys = original.TextBox1SelectedItemKeys;
        this.ListNodesSelectedItemKeys = original.ListNodesSelectedItemKeys;
        this.ListLinksSelectedItemKeys = original.ListLinksSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = GraphQueryDebugViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            GraphQueryDebugViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): GraphQueryDebugViewModel {
        var reduced = GraphQueryDebugViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        GraphQueryDebugViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: GraphQueryDebugViewModel) {
        if (reduced == null) return;

        delete reduced.TextBox1__InitialSelection;

        DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }
public Info:
    any;
public CountryName:
    any;
public IsExtended:
    any;
public TextBox1__InitialSelection:
    any;
public TextBox1SelectedItemKeys:
    any[];
public ListNodesSelectedItemKeys:
    any[];
public ListLinksSelectedItemKeys:
    any[];
}

export class Info_GraphDebugResultViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Result != null)
            instance.Result = Info_GraphDebugResult_Result_GraphBackendResponseViewModel._lightCast(instance.Result);
        return instance;
    }

    public static _initializeFrom(original: Info_GraphDebugResultViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Info_GraphDebugResultViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Info_GraphDebugResultViewModel = new Info_GraphDebugResultViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInfo_GraphDebugResultViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInfo_GraphDebugResultViewModel(original: Info_GraphDebugResultViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Query !== undefined) this.Query = original.Query;
        if(original.RawResult !== undefined) this.RawResult = original.RawResult;

        if(original.Result !== undefined) this.Result = Info_GraphDebugResult_Result_GraphBackendResponseViewModel._initializeFrom(original.Result, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Info_GraphDebugResultViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Info_GraphDebugResultViewModel {
        var reduced = Info_GraphDebugResultViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Query:
    any;
public RawResult:
    any;
public Result:
    any;
}

export class Info_GraphDebugResult_Result_GraphBackendResponseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this.Nodes = new Array<any>();
        this.Links = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Metadata != null)
            instance.Metadata = Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._lightCast(instance.Metadata);

        if(instance.Nodes != null) {
            for(let i = 0; i < instance.Nodes.length; i++) {
                instance.Nodes[i] = Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._lightCast(instance.Nodes[i]);

            }
        }

        if(instance.Links != null) {
            for(let i = 0; i < instance.Links.length; i++) {
                instance.Links[i] = Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._lightCast(instance.Links[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: Info_GraphDebugResult_Result_GraphBackendResponseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Info_GraphDebugResult_Result_GraphBackendResponseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Info_GraphDebugResult_Result_GraphBackendResponseViewModel = new Info_GraphDebugResult_Result_GraphBackendResponseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInfo_GraphDebugResult_Result_GraphBackendResponseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInfo_GraphDebugResult_Result_GraphBackendResponseViewModel(original: Info_GraphDebugResult_Result_GraphBackendResponseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Metadata !== undefined) this.Metadata = Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._initializeFrom(original.Metadata, ignoreReadOnlyProperties, context);

        if(original.Nodes != null) {
            for(let i = 0; i < original.Nodes.length; i++) {
                this.Nodes.push(Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._initializeFrom(original.Nodes[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Links != null) {
            for(let i = 0; i < original.Links.length; i++) {
                this.Links.push(Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._initializeFrom(original.Links[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Info_GraphDebugResult_Result_GraphBackendResponseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Info_GraphDebugResult_Result_GraphBackendResponseViewModel {
        var reduced = Info_GraphDebugResult_Result_GraphBackendResponseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Metadata:
    any;
public Nodes:
    Array<any>;
public Links:
    Array<any>;
}

export class Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel = new Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel(original: Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.ExportDataAsJson !== undefined) this.ExportDataAsJson = original.ExportDataAsJson;
        if(original.Pages !== undefined) this.Pages = original.Pages;
        if(original.PageSize !== undefined) this.PageSize = original.PageSize;
        if(original.QueryElapsedTime !== undefined) this.QueryElapsedTime = original.QueryElapsedTime;
        if(original.TotalResponseElementsWithPositiveRelevanceLevel !== undefined) this.TotalResponseElementsWithPositiveRelevanceLevel = original.TotalResponseElementsWithPositiveRelevanceLevel;
        if(original.Elements !== undefined) this.Elements = original.Elements;
        if(original.Relations !== undefined) this.Relations = original.Relations;
        if(original.ExportType !== undefined) this.ExportType = original.ExportType;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel {
        var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public ExportDataAsJson:
    any;
public Pages:
    any;
public PageSize:
    any;
public QueryElapsedTime:
    any;
public TotalResponseElementsWithPositiveRelevanceLevel:
    any;
public Elements:
    any;
public Relations:
    any;
public ExportType:
    any;
}

export class Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel = new Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel(original: Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Name !== undefined) this.Name = original.Name;
        if(original.Label !== undefined) this.Label = original.Label;
        if(original.LabelType !== undefined) this.LabelType = original.LabelType;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Graphid !== undefined) this.Graphid = original.Graphid;
        if(original.CC !== undefined) this.CC = original.CC;
        if(original.SL !== undefined) this.SL = original.SL;
        if(original.CL !== undefined) this.CL = original.CL;
        if(original.RL !== undefined) this.RL = original.RL;
        if(original.IA !== undefined) this.IA = original.IA;
        if(original.AL !== undefined) this.AL = original.AL;
        if(original.AC !== undefined) this.AC = original.AC;
        if(original.Attr !== undefined) this.Attr = original.Attr;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel {
        var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Name:
    any;
public Label:
    any;
public LabelType:
    any;
public Id:
    any;
public Graphid:
    any;
public CC:
    any;
public SL:
    any;
public CL:
    any;
public RL:
    any;
public IA:
    any;
public AL:
    any;
public AC:
    any;
public Attr:
    any;
}

export class Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel = new Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel(original: Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Source !== undefined) this.Source = original.Source;
        if(original.Target !== undefined) this.Target = original.Target;
        if(original.Type !== undefined) this.Type = original.Type;
        if(original.TypeRel !== undefined) this.TypeRel = original.TypeRel;
        if(original.Sid !== undefined) this.Sid = original.Sid;
        if(original.Tid !== undefined) this.Tid = original.Tid;
        if(original.Weight !== undefined) this.Weight = original.Weight;
        if(original.CL !== undefined) this.CL = original.CL;
        if(original.RL !== undefined) this.RL = original.RL;
        if(original.IA !== undefined) this.IA = original.IA;
        if(original.AL !== undefined) this.AL = original.AL;
        if(original.AC !== undefined) this.AC = original.AC;
        if(original.Attr !== undefined) this.Attr = original.Attr;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel {
        var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Source:
    any;
public Target:
    any;
public Type:
    any;
public TypeRel:
    any;
public Sid:
    any;
public Tid:
    any;
public Weight:
    any;
public CL:
    any;
public RL:
    any;
public IA:
    any;
public AL:
    any;
public AC:
    any;
public Attr:
    any;
}

}
