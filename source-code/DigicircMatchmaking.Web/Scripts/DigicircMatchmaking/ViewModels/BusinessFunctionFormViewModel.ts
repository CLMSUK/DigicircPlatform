// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
namespace DigicircMatchmaking.ViewModels.BusinessFunctionForm {
export class BusinessFunctionFormViewModel extends DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.BusinessFunction != null)
            instance.BusinessFunction = BusinessFunction_BusinessFunctionViewModel._lightCast(instance.BusinessFunction);
        return instance;
    }

    public static _initializeFrom(original: BusinessFunctionFormViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): BusinessFunctionFormViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        BusinessFunctionFormViewModel = new BusinessFunctionFormViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateBusinessFunctionFormViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateBusinessFunctionFormViewModel(original: BusinessFunctionFormViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.BusinessFunction !== undefined) this.BusinessFunction = BusinessFunction_BusinessFunctionViewModel._initializeFrom(original.BusinessFunction, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = BusinessFunctionFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            BusinessFunctionFormViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): BusinessFunctionFormViewModel {
        var reduced = BusinessFunctionFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        BusinessFunctionFormViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: BusinessFunctionFormViewModel) {
        if (reduced == null) return;


        DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }
public BusinessFunction:
    any;
}

export class BusinessFunction_BusinessFunctionViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: BusinessFunction_BusinessFunctionViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): BusinessFunction_BusinessFunctionViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        BusinessFunction_BusinessFunctionViewModel = new BusinessFunction_BusinessFunctionViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateBusinessFunction_BusinessFunctionViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateBusinessFunction_BusinessFunctionViewModel(original: BusinessFunction_BusinessFunctionViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Value !== undefined) this.Value = original.Value;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = BusinessFunction_BusinessFunctionViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): BusinessFunction_BusinessFunctionViewModel {
        var reduced = BusinessFunction_BusinessFunctionViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Id:
    any;
public Value:
    any;
    public _versionTimestamp?: string;
}

}
