// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
namespace DigicircMatchmaking.ViewModels.KnowledgeHub {
export class KnowledgeHubViewModel extends DigicircMatchmaking.ViewModels.SymbiosisMasterPage.SymbiosisMasterPageViewModel {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Waste != null)
            instance.Waste = Waste_MaterialViewModel._lightCast(instance.Waste);
        if(instance.Product != null)
            instance.Product = Product_MaterialViewModel._lightCast(instance.Product);
        if(instance.Material != null)
            instance.Material = Material_ProductViewModel._lightCast(instance.Material);
        if(instance.Actor != null)
            instance.Actor = Actor_ActorViewModel._lightCast(instance.Actor);
        return instance;
    }

    public static _initializeFrom(original: KnowledgeHubViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): KnowledgeHubViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        KnowledgeHubViewModel = new KnowledgeHubViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateKnowledgeHubViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateKnowledgeHubViewModel(original: KnowledgeHubViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateSymbiosisMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Waste !== undefined) this.Waste = Waste_MaterialViewModel._initializeFrom(original.Waste, ignoreReadOnlyProperties, context);

        if(original.Product !== undefined) this.Product = Product_MaterialViewModel._initializeFrom(original.Product, ignoreReadOnlyProperties, context);
        if(original.Endpoint !== undefined) this.Endpoint = original.Endpoint;

        if(original.Material !== undefined) this.Material = Material_ProductViewModel._initializeFrom(original.Material, ignoreReadOnlyProperties, context);

        if(original.Actor !== undefined) this.Actor = Actor_ActorViewModel._initializeFrom(original.Actor, ignoreReadOnlyProperties, context);
        if (original.TextBox__InitialSelection !== undefined) this.TextBox__InitialSelection = original.TextBox__InitialSelection;
        if (original.TextBox1__InitialSelection !== undefined) this.TextBox1__InitialSelection = original.TextBox1__InitialSelection;
        this.TextBoxSelectedItemKeys = original.TextBoxSelectedItemKeys;
        this.TextBox1SelectedItemKeys = original.TextBox1SelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = KnowledgeHubViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            KnowledgeHubViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): KnowledgeHubViewModel {
        var reduced = KnowledgeHubViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        KnowledgeHubViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: KnowledgeHubViewModel) {
        if (reduced == null) return;

        delete reduced.TextBox__InitialSelection;
        delete reduced.TextBox1__InitialSelection;

        DigicircMatchmaking.ViewModels.SymbiosisMasterPage.SymbiosisMasterPageViewModel._deleteDropDownInitialValues(reduced);
    }
public Waste:
    any;
public Product:
    any;
public Endpoint:
    any;
public Material:
    any;
public Actor:
    any;
public TextBox__InitialSelection:
    any;
public TextBox1__InitialSelection:
    any;
public TextBoxSelectedItemKeys:
    any[];
public TextBox1SelectedItemKeys:
    any[];
}

export class Waste_MaterialViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Waste_MaterialViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Waste_MaterialViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Waste_MaterialViewModel = new Waste_MaterialViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateWaste_MaterialViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateWaste_MaterialViewModel(original: Waste_MaterialViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.HsSpecific !== undefined) this.HsSpecific = original.HsSpecific;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Name !== undefined) this.Name = original.Name;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Waste_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Waste_MaterialViewModel {
        var reduced = Waste_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Description:
    any;
public HsSpecific:
    any;
public Id:
    any;
public Name:
    any;
    public _versionTimestamp?: string;
}

export class Product_MaterialViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Product_MaterialViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Product_MaterialViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Product_MaterialViewModel = new Product_MaterialViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateProduct_MaterialViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateProduct_MaterialViewModel(original: Product_MaterialViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.HsSpecific !== undefined) this.HsSpecific = original.HsSpecific;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Name !== undefined) this.Name = original.Name;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Product_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Product_MaterialViewModel {
        var reduced = Product_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Description:
    any;
public HsSpecific:
    any;
public Id:
    any;
public Name:
    any;
    public _versionTimestamp?: string;
}

export class Material_ProductViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.ValidFrom != null) instance.ValidFrom = new Date(instance.ValidFrom);
        if(instance.ValidTo != null) instance.ValidTo = new Date(instance.ValidTo);
        if(instance.Resource != null)
            instance.Resource = Material_Product_Resource_MaterialViewModel._lightCast(instance.Resource);
        return instance;
    }

    public static _initializeFrom(original: Material_ProductViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Material_ProductViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Material_ProductViewModel = new Material_ProductViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateMaterial_ProductViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateMaterial_ProductViewModel(original: Material_ProductViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.IsDesired !== undefined) this.IsDesired = original.IsDesired;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.ValidFrom)) this.ValidFrom = new Date(original.ValidFrom);
        if(!CLMS.Framework.String.IsNullOrEmpty(original.ValidTo)) this.ValidTo = new Date(original.ValidTo);

        if(original.Resource !== undefined) this.Resource = Material_Product_Resource_MaterialViewModel._initializeFrom(original.Resource, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Material_ProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Material_ProductViewModel {
        var reduced = Material_ProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Id:
    any;
public IsDesired:
    any;
public Quantity:
    any;
public ValidFrom:
    any;
public ValidTo:
    any;
public Resource:
    any;
    public _versionTimestamp?: string;
}

export class Material_Product_Resource_MaterialViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Material_Product_Resource_MaterialViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Material_Product_Resource_MaterialViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Material_Product_Resource_MaterialViewModel = new Material_Product_Resource_MaterialViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateMaterial_Product_Resource_MaterialViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateMaterial_Product_Resource_MaterialViewModel(original: Material_Product_Resource_MaterialViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.HsSpecific !== undefined) this.HsSpecific = original.HsSpecific;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.PendingGraph !== undefined) this.PendingGraph = original.PendingGraph;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Material_Product_Resource_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Material_Product_Resource_MaterialViewModel {
        var reduced = Material_Product_Resource_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Description:
    any;
public HsSpecific:
    any;
public Id:
    any;
public Name:
    any;
public PendingGraph:
    any;
    public _versionTimestamp?: string;
}

export class Actor_ActorViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.CircularEconomyRequirements != null)
            instance.CircularEconomyRequirements = Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel._lightCast(instance.CircularEconomyRequirements);
        return instance;
    }

    public static _initializeFrom(original: Actor_ActorViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_ActorViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_ActorViewModel = new Actor_ActorViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_ActorViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_ActorViewModel(original: Actor_ActorViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.ClusterName !== undefined) this.ClusterName = original.ClusterName;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.GetCountOfClusterMembers !== undefined) this.GetCountOfClusterMembers = original.GetCountOfClusterMembers;
        if(original.HasSites !== undefined) this.HasSites = original.HasSites;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Keywords !== undefined) this.Keywords = original.Keywords;
        if(original.MemberOfCluster !== undefined) this.MemberOfCluster = original.MemberOfCluster;
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.ShortDescription !== undefined) this.ShortDescription = original.ShortDescription;
        if(original.SpecifiedEnityType !== undefined) this.SpecifiedEnityType = original.SpecifiedEnityType;
        if(original.Url !== undefined) this.Url = original.Url;

        if(original.CircularEconomyRequirements !== undefined) this.CircularEconomyRequirements = Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel._initializeFrom(original.CircularEconomyRequirements, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_ActorViewModel {
        var reduced = Actor_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public ClusterName:
    any;
public Description:
    any;
public Email:
    any;
public GetCountOfClusterMembers:
    any;
public HasSites:
    any;
public Id:
    any;
public Keywords:
    any;
public MemberOfCluster:
    any;
public Name:
    any;
public ShortDescription:
    any;
public SpecifiedEnityType:
    any;
public Url:
    any;
public CircularEconomyRequirements:
    any;
    public _versionTimestamp?: string;
}

export class Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this.DesiredResources = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;


        if(instance.DesiredResources != null) {
            for(let i = 0; i < instance.DesiredResources.length; i++) {
                instance.DesiredResources[i] = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel._lightCast(instance.DesiredResources[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel = new Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.DigitalExpertise !== undefined) this.DigitalExpertise = original.DigitalExpertise;
        if(original.DigitalProviredNeeded !== undefined) this.DigitalProviredNeeded = original.DigitalProviredNeeded;
        if(original.ExperienceInCircularEconomy !== undefined) this.ExperienceInCircularEconomy = original.ExperienceInCircularEconomy;
        if(original.GetExperienceInCircularEconomy !== undefined) this.GetExperienceInCircularEconomy = original.GetExperienceInCircularEconomy;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.SpecifyExperienceInCircularEconomy !== undefined) this.SpecifyExperienceInCircularEconomy = original.SpecifyExperienceInCircularEconomy;
        if(original.ThematicExpertiseNeeded !== undefined) this.ThematicExpertiseNeeded = original.ThematicExpertiseNeeded;

        if(original.DesiredResources != null) {
            for(let i = 0; i < original.DesiredResources.length; i++) {
                this.DesiredResources.push(Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel._initializeFrom(original.DesiredResources[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel {
        var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public DigitalExpertise:
    any;
public DigitalProviredNeeded:
    any;
public ExperienceInCircularEconomy:
    any;
public GetExperienceInCircularEconomy:
    any;
public Id:
    any;
public SpecifyExperienceInCircularEconomy:
    any;
public ThematicExpertiseNeeded:
    any;
public DesiredResources:
    Array<any>;
    public _versionTimestamp?: string;
}

export enum $DigitalExpertise {
    None,Average,Medium,Sufficient,High
}
export class Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.ValidFrom != null) instance.ValidFrom = new Date(instance.ValidFrom);
        if(instance.ValidTo != null) instance.ValidTo = new Date(instance.ValidTo);
        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel = new Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.IsDesired !== undefined) this.IsDesired = original.IsDesired;
        if(original.Quantity !== undefined) this.Quantity = original.Quantity;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.ValidFrom)) this.ValidFrom = new Date(original.ValidFrom);
        if(!CLMS.Framework.String.IsNullOrEmpty(original.ValidTo)) this.ValidTo = new Date(original.ValidTo);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel {
        var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredResources_ProductViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Id:
    any;
public IsDesired:
    any;
public Quantity:
    any;
public ValidFrom:
    any;
public ValidTo:
    any;
    public _versionTimestamp?: string;
}

}
