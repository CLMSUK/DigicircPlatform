// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
namespace DigicircMatchmaking.ViewModels.GraphCreateDebug {
export class GraphCreateDebugViewModel extends DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.UpdateRequest != null)
            instance.UpdateRequest = UpdateRequest_GraphUpdateElementViewModel._lightCast(instance.UpdateRequest);
        if(instance.Result != null)
            instance.Result = Result_UpdateResponseViewModel._lightCast(instance.Result);
        return instance;
    }

    public static _initializeFrom(original: GraphCreateDebugViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): GraphCreateDebugViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        GraphCreateDebugViewModel = new GraphCreateDebugViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateGraphCreateDebugViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateGraphCreateDebugViewModel(original: GraphCreateDebugViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.UpdateRequest !== undefined) this.UpdateRequest = UpdateRequest_GraphUpdateElementViewModel._initializeFrom(original.UpdateRequest, ignoreReadOnlyProperties, context);

        if(original.Result !== undefined) this.Result = Result_UpdateResponseViewModel._initializeFrom(original.Result, ignoreReadOnlyProperties, context);

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = GraphCreateDebugViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            GraphCreateDebugViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): GraphCreateDebugViewModel {
        var reduced = GraphCreateDebugViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        GraphCreateDebugViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: GraphCreateDebugViewModel) {
        if (reduced == null) return;


        DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }
public UpdateRequest:
    any;
public Result:
    any;
}

export class UpdateRequest_GraphUpdateElementViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: UpdateRequest_GraphUpdateElementViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): UpdateRequest_GraphUpdateElementViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        UpdateRequest_GraphUpdateElementViewModel = new UpdateRequest_GraphUpdateElementViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateUpdateRequest_GraphUpdateElementViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateUpdateRequest_GraphUpdateElementViewModel(original: UpdateRequest_GraphUpdateElementViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.RelationType !== undefined) this.RelationType = original.RelationType;
        if(original.SourceNodeName !== undefined) this.SourceNodeName = original.SourceNodeName;
        if(original.SourceNodeType !== undefined) this.SourceNodeType = original.SourceNodeType;
        if(original.DestinationNodeName !== undefined) this.DestinationNodeName = original.DestinationNodeName;
        if(original.DestinationNodeType !== undefined) this.DestinationNodeType = original.DestinationNodeType;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = UpdateRequest_GraphUpdateElementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): UpdateRequest_GraphUpdateElementViewModel {
        var reduced = UpdateRequest_GraphUpdateElementViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public RelationType:
    any;
public SourceNodeName:
    any;
public SourceNodeType:
    any;
public DestinationNodeName:
    any;
public DestinationNodeType:
    any;
}

export class Result_UpdateResponseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Result_UpdateResponseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Result_UpdateResponseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Result_UpdateResponseViewModel = new Result_UpdateResponseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateResult_UpdateResponseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateResult_UpdateResponseViewModel(original: Result_UpdateResponseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Type !== undefined) this.Type = original.Type;
        if(original.Desc !== undefined) this.Desc = original.Desc;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Result_UpdateResponseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Result_UpdateResponseViewModel {
        var reduced = Result_UpdateResponseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Type:
    any;
public Desc:
    any;
}

}
