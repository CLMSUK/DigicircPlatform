// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
namespace DigicircMatchmaking.ViewModels.ActorViewForm {
export class ActorViewFormViewModel extends DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel {
    public constructor() {
        super();
        this.Points = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Actor != null)
            instance.Actor = Actor_ActorViewModel._lightCast(instance.Actor);

        if(instance.Points != null) {
            for(let i = 0; i < instance.Points.length; i++) {
                instance.Points[i] = Points_ActorViewModel._lightCast(instance.Points[i]);

            }
        }
        if(instance.SelectedSector != null)
            instance.SelectedSector = SelectedSector_SectorTypeViewModel._lightCast(instance.SelectedSector);
        if(instance.SignInUser != null)
            instance.SignInUser = SignInUser_DigicircUserViewModel._lightCast(instance.SignInUser);
        return instance;
    }

    public static _initializeFrom(original: ActorViewFormViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): ActorViewFormViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        ActorViewFormViewModel = new ActorViewFormViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActorViewFormViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActorViewFormViewModel(original: ActorViewFormViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;

        this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);

        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Actor !== undefined) this.Actor = Actor_ActorViewModel._initializeFrom(original.Actor, ignoreReadOnlyProperties, context);

        if(original.Points != null) {
            for(let i = 0; i < original.Points.length; i++) {
                this.Points.push(Points_ActorViewModel._initializeFrom(original.Points[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.SelectedSector !== undefined) this.SelectedSector = SelectedSector_SectorTypeViewModel._initializeFrom(original.SelectedSector, ignoreReadOnlyProperties, context);

        if(original.SignInUser !== undefined) this.SignInUser = SignInUser_DigicircUserViewModel._initializeFrom(original.SignInUser, ignoreReadOnlyProperties, context);
        if(original.FromGraph !== undefined) this.FromGraph = original.FromGraph;
        if (original.DropdownBox2__InitialSelection !== undefined) this.DropdownBox2__InitialSelection = original.DropdownBox2__InitialSelection;
        this.DropdownBox2SelectedItemKeys = original.DropdownBox2SelectedItemKeys;
        this.NewMapSelectedItemKeys = original.NewMapSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = ActorViewFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            ActorViewFormViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): ActorViewFormViewModel {
        var reduced = ActorViewFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        ActorViewFormViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: ActorViewFormViewModel) {
        if (reduced == null) return;

        delete reduced.DropdownBox2__InitialSelection;

        DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
    }
public Actor:
    any;
public Points:
    Array<any>;
public SelectedSector:
    any;
public SignInUser:
    any;
public FromGraph:
    any;
public DropdownBox2__InitialSelection:
    any;
public DropdownBox2SelectedItemKeys:
    any[];
public NewMapSelectedItemKeys:
    any[];
}

export class Actor_ActorViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this.SectorTypes = new Array<any>();
        this.Administrators = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Address != null)
            instance.Address = Actor_Actor_Address_AddressViewModel._lightCast(instance.Address);
        if(instance.EntityType != null)
            instance.EntityType = Actor_Actor_EntityType_EntityTypeViewModel._lightCast(instance.EntityType);
        if(instance.CircularEconomyRequirements != null)
            instance.CircularEconomyRequirements = Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel._lightCast(instance.CircularEconomyRequirements);

        if(instance.SectorTypes != null) {
            for(let i = 0; i < instance.SectorTypes.length; i++) {
                instance.SectorTypes[i] = Actor_Actor_SectorTypes_SectorTypeViewModel._lightCast(instance.SectorTypes[i]);

            }
        }
        if(instance.CircularEconomyProviderReport != null)
            instance.CircularEconomyProviderReport = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel._lightCast(instance.CircularEconomyProviderReport);
        if(instance.ActorLogo != null)
            instance.ActorLogo = Actor_Actor_ActorLogo_FileDataViewModel._lightCast(instance.ActorLogo);
        if(instance.AddedBy != null)
            instance.AddedBy = Actor_Actor_AddedBy_DigicircUserViewModel._lightCast(instance.AddedBy);
        if(instance.Cluster != null)
            instance.Cluster = Actor_Actor_Cluster_ActorViewModel._lightCast(instance.Cluster);

        if(instance.Administrators != null) {
            for(let i = 0; i < instance.Administrators.length; i++) {
                instance.Administrators[i] = Actor_Actor_Administrators_DigicircUserViewModel._lightCast(instance.Administrators[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: Actor_ActorViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_ActorViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_ActorViewModel = new Actor_ActorViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_ActorViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_ActorViewModel(original: Actor_ActorViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.ClusterName !== undefined) this.ClusterName = original.ClusterName;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.MemberOfCluster !== undefined) this.MemberOfCluster = original.MemberOfCluster;
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.SpecifiedEnityType !== undefined) this.SpecifiedEnityType = original.SpecifiedEnityType;
        if(original.Url !== undefined) this.Url = original.Url;

        if(original.Address !== undefined) this.Address = Actor_Actor_Address_AddressViewModel._initializeFrom(original.Address, ignoreReadOnlyProperties, context);

        if(original.EntityType !== undefined) this.EntityType = Actor_Actor_EntityType_EntityTypeViewModel._initializeFrom(original.EntityType, ignoreReadOnlyProperties, context);

        if(original.CircularEconomyRequirements !== undefined) this.CircularEconomyRequirements = Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel._initializeFrom(original.CircularEconomyRequirements, ignoreReadOnlyProperties, context);

        if(original.SectorTypes != null) {
            for(let i = 0; i < original.SectorTypes.length; i++) {
                this.SectorTypes.push(Actor_Actor_SectorTypes_SectorTypeViewModel._initializeFrom(original.SectorTypes[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.CircularEconomyProviderReport !== undefined) this.CircularEconomyProviderReport = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel._initializeFrom(original.CircularEconomyProviderReport, ignoreReadOnlyProperties, context);

        if(original.ActorLogo !== undefined) this.ActorLogo = Actor_Actor_ActorLogo_FileDataViewModel._initializeFrom(original.ActorLogo, ignoreReadOnlyProperties, context);

        if(original.AddedBy !== undefined) this.AddedBy = Actor_Actor_AddedBy_DigicircUserViewModel._initializeFrom(original.AddedBy, ignoreReadOnlyProperties, context);

        if(original.Cluster !== undefined) this.Cluster = Actor_Actor_Cluster_ActorViewModel._initializeFrom(original.Cluster, ignoreReadOnlyProperties, context);

        if(original.Administrators != null) {
            for(let i = 0; i < original.Administrators.length; i++) {
                this.Administrators.push(Actor_Actor_Administrators_DigicircUserViewModel._initializeFrom(original.Administrators[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_ActorViewModel {
        var reduced = Actor_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public ClusterName:
    any;
public Description:
    any;
public Email:
    any;
public Id:
    any;
public MemberOfCluster:
    any;
public Name:
    any;
public SpecifiedEnityType:
    any;
public Url:
    any;
public Address:
    any;
public EntityType:
    any;
public CircularEconomyRequirements:
    any;
public SectorTypes:
    Array<any>;
public CircularEconomyProviderReport:
    any;
public ActorLogo:
    any;
public AddedBy:
    any;
public Cluster:
    any;
public Administrators:
    Array<any>;
    public _versionTimestamp?: string;
}

export class Actor_Actor_Address_AddressViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Country != null)
            instance.Country = Actor_Actor_Address_Address_Country_CountryViewModel._lightCast(instance.Country);
        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_Address_AddressViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_Address_AddressViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_Address_AddressViewModel = new Actor_Actor_Address_AddressViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_Address_AddressViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_Address_AddressViewModel(original: Actor_Actor_Address_AddressViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.FullAddress !== undefined) this.FullAddress = original.FullAddress;
        if(original.Id !== undefined) this.Id = original.Id;

        if(ignoreReadOnlyProperties !== true) {
            if(original.Latitude !== undefined) this.Latitude = original.Latitude;
        } else{
            delete this['Latitude'];
        }


        if(ignoreReadOnlyProperties !== true) {
            if(original.Longitude !== undefined) this.Longitude = original.Longitude;
        } else{
            delete this['Longitude'];
        }


        if(ignoreReadOnlyProperties !== true) {
            if(original.Number !== undefined) this.Number = original.Number;
        } else{
            delete this['Number'];
        }


        if(ignoreReadOnlyProperties !== true) {
            if(original.StreetName !== undefined) this.StreetName = original.StreetName;
        } else{
            delete this['StreetName'];
        }


        if(ignoreReadOnlyProperties !== true) {
            if(original.Town !== undefined) this.Town = original.Town;
        } else{
            delete this['Town'];
        }


        if(ignoreReadOnlyProperties !== true) {
            if(original.Zip !== undefined) this.Zip = original.Zip;
        } else{
            delete this['Zip'];
        }


        if(ignoreReadOnlyProperties !== true) {

            if(original.Country !== undefined) this.Country = Actor_Actor_Address_Address_Country_CountryViewModel._initializeFrom(original.Country, ignoreReadOnlyProperties, context);
        } else{
            delete this['Country'];
        }


        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_Address_AddressViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_Address_AddressViewModel {
        var reduced = Actor_Actor_Address_AddressViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public FullAddress:
    any;
public Id:
    any;
public Latitude:
    any;
public Longitude:
    any;
public Number:
    any;
public StreetName:
    any;
public Town:
    any;
public Zip:
    any;
public Country:
    any;
    public _versionTimestamp?: string;
}

export class Actor_Actor_Address_Address_Country_CountryViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_Address_Address_Country_CountryViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_Address_Address_Country_CountryViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_Address_Address_Country_CountryViewModel = new Actor_Actor_Address_Address_Country_CountryViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_Address_Address_Country_CountryViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_Address_Address_Country_CountryViewModel(original: Actor_Actor_Address_Address_Country_CountryViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(ignoreReadOnlyProperties !== true) {
            if(original.Id !== undefined) this.Id = original.Id;
        } else{
            delete this['Id'];
        }


        if(ignoreReadOnlyProperties !== true) {
            if(original.Name !== undefined) this.Name = original.Name;
        } else{
            delete this['Name'];
        }


        if(ignoreReadOnlyProperties !== true) {
            if(original.ShortName !== undefined) this.ShortName = original.ShortName;
        } else{
            delete this['ShortName'];
        }


        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_Address_Address_Country_CountryViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_Address_Address_Country_CountryViewModel {
        var reduced = Actor_Actor_Address_Address_Country_CountryViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Id:
    any;
public Name:
    any;
public ShortName:
    any;
}

export class Actor_Actor_EntityType_EntityTypeViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_EntityType_EntityTypeViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_EntityType_EntityTypeViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_EntityType_EntityTypeViewModel = new Actor_Actor_EntityType_EntityTypeViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_EntityType_EntityTypeViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_EntityType_EntityTypeViewModel(original: Actor_Actor_EntityType_EntityTypeViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Id !== undefined) this.Id = original.Id;

        if(ignoreReadOnlyProperties !== true) {
            if(original.IsCluster !== undefined) this.IsCluster = original.IsCluster;
        } else{
            delete this['IsCluster'];
        }

        if(original.IsProvider !== undefined) this.IsProvider = original.IsProvider;
        if(original.Value !== undefined) this.Value = original.Value;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_EntityType_EntityTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_EntityType_EntityTypeViewModel {
        var reduced = Actor_Actor_EntityType_EntityTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Code:
    any;
public Id:
    any;
public IsCluster:
    any;
public IsProvider:
    any;
public Value:
    any;
}

export class Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this.DesiredThematicExpertises = new Array<any>();
        this.DesiredGeographicalArea = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;


        if(instance.DesiredThematicExpertises != null) {
            for(let i = 0; i < instance.DesiredThematicExpertises.length; i++) {
                instance.DesiredThematicExpertises[i] = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel._lightCast(instance.DesiredThematicExpertises[i]);

            }
        }
        if(instance.DesiredSMESector != null)
            instance.DesiredSMESector = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel._lightCast(instance.DesiredSMESector);

        if(instance.DesiredGeographicalArea != null) {
            for(let i = 0; i < instance.DesiredGeographicalArea.length; i++) {
                instance.DesiredGeographicalArea[i] = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel._lightCast(instance.DesiredGeographicalArea[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel = new Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.DigitalExpertise !== undefined) this.DigitalExpertise = original.DigitalExpertise;
        if(original.DigitalProviredNeeded !== undefined) this.DigitalProviredNeeded = original.DigitalProviredNeeded;
        if(original.ExperienceInCircularEconomy !== undefined) this.ExperienceInCircularEconomy = original.ExperienceInCircularEconomy;
        if(original.GetExperienceInCircularEconomy !== undefined) this.GetExperienceInCircularEconomy = original.GetExperienceInCircularEconomy;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.SpecifyExperienceInCircularEconomy !== undefined) this.SpecifyExperienceInCircularEconomy = original.SpecifyExperienceInCircularEconomy;
        if(original.ThematicExpertiseNeeded !== undefined) this.ThematicExpertiseNeeded = original.ThematicExpertiseNeeded;

        if(original.DesiredThematicExpertises != null) {
            for(let i = 0; i < original.DesiredThematicExpertises.length; i++) {
                this.DesiredThematicExpertises.push(Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel._initializeFrom(original.DesiredThematicExpertises[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.DesiredSMESector !== undefined) this.DesiredSMESector = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel._initializeFrom(original.DesiredSMESector, ignoreReadOnlyProperties, context);

        if(original.DesiredGeographicalArea != null) {
            for(let i = 0; i < original.DesiredGeographicalArea.length; i++) {
                this.DesiredGeographicalArea.push(Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel._initializeFrom(original.DesiredGeographicalArea[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel {
        var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReportViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public DigitalExpertise:
    any;
public DigitalProviredNeeded:
    any;
public ExperienceInCircularEconomy:
    any;
public GetExperienceInCircularEconomy:
    any;
public Id:
    any;
public SpecifyExperienceInCircularEconomy:
    any;
public ThematicExpertiseNeeded:
    any;
public DesiredThematicExpertises:
    Array<any>;
public DesiredSMESector:
    any;
public DesiredGeographicalArea:
    Array<any>;
    public _versionTimestamp?: string;
}

export enum $DigitalExpertise {
    None,Average,Medium,Sufficient,High
}
export class Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel = new Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Value !== undefined) this.Value = original.Value;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel {
        var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredThematicExpertises_ThematicExpertiseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Code:
    any;
public Id:
    any;
public Value:
    any;
}

export class Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel = new Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Value !== undefined) this.Value = original.Value;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel {
        var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredSMESector_SectorTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Code:
    any;
public Id:
    any;
public Value:
    any;
}

export class Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel = new Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel(original: Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel {
        var reduced = Actor_Actor_CircularEconomyRequirements_CircularEconomyReport_DesiredGeographicalArea_GeographicalAreaViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Id:
    any;
}

export class Actor_Actor_SectorTypes_SectorTypeViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_SectorTypes_SectorTypeViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_SectorTypes_SectorTypeViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_SectorTypes_SectorTypeViewModel = new Actor_Actor_SectorTypes_SectorTypeViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_SectorTypes_SectorTypeViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_SectorTypes_SectorTypeViewModel(original: Actor_Actor_SectorTypes_SectorTypeViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Value !== undefined) this.Value = original.Value;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_SectorTypes_SectorTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_SectorTypes_SectorTypeViewModel {
        var reduced = Actor_Actor_SectorTypes_SectorTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Code:
    any;
public Id:
    any;
public Value:
    any;
}

export class Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this.PlaceOperates = new Array<any>();
        this.Expertises = new Array<any>();
        this.ServicesProvided = new Array<any>();
        this.ThematicExpertises = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;


        if(instance.PlaceOperates != null) {
            for(let i = 0; i < instance.PlaceOperates.length; i++) {
                instance.PlaceOperates[i] = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel._lightCast(instance.PlaceOperates[i]);

            }
        }

        if(instance.Expertises != null) {
            for(let i = 0; i < instance.Expertises.length; i++) {
                instance.Expertises[i] = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel._lightCast(instance.Expertises[i]);

            }
        }

        if(instance.ServicesProvided != null) {
            for(let i = 0; i < instance.ServicesProvided.length; i++) {
                instance.ServicesProvided[i] = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel._lightCast(instance.ServicesProvided[i]);

            }
        }

        if(instance.ThematicExpertises != null) {
            for(let i = 0; i < instance.ThematicExpertises.length; i++) {
                instance.ThematicExpertises[i] = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel._lightCast(instance.ThematicExpertises[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel = new Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.AvailableTestingFacilities !== undefined) this.AvailableTestingFacilities = original.AvailableTestingFacilities;
        if(original.Id !== undefined) this.Id = original.Id;

        if(original.PlaceOperates != null) {
            for(let i = 0; i < original.PlaceOperates.length; i++) {
                this.PlaceOperates.push(Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel._initializeFrom(original.PlaceOperates[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.Expertises != null) {
            for(let i = 0; i < original.Expertises.length; i++) {
                this.Expertises.push(Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel._initializeFrom(original.Expertises[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.ServicesProvided != null) {
            for(let i = 0; i < original.ServicesProvided.length; i++) {
                this.ServicesProvided.push(Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel._initializeFrom(original.ServicesProvided[i], ignoreReadOnlyProperties, context));
            }
        }

        if(original.ThematicExpertises != null) {
            for(let i = 0; i < original.ThematicExpertises.length; i++) {
                this.ThematicExpertises.push(Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel._initializeFrom(original.ThematicExpertises[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel {
        var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReportViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public AvailableTestingFacilities:
    any;
public Id:
    any;
public PlaceOperates:
    Array<any>;
public Expertises:
    Array<any>;
public ServicesProvided:
    Array<any>;
public ThematicExpertises:
    Array<any>;
    public _versionTimestamp?: string;
}

export class Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel = new Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Id !== undefined) this.Id = original.Id;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel {
        var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_PlaceOperates_GeographicalAreaViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Id:
    any;
}

export class Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel = new Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Value !== undefined) this.Value = original.Value;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel {
        var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_Expertises_ExpertiseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Code:
    any;
public Id:
    any;
public Value:
    any;
}

export class Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel = new Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Value !== undefined) this.Value = original.Value;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel {
        var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ServicesProvided_ServicesViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Code:
    any;
public Id:
    any;
public Value:
    any;
}

export class Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel = new Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel(original: Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Value !== undefined) this.Value = original.Value;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel {
        var reduced = Actor_Actor_CircularEconomyProviderReport_CircularEconomyProviderReport_ThematicExpertises_ThematicExpertiseViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Code:
    any;
public Id:
    any;
public Value:
    any;
}

export class Actor_Actor_ActorLogo_FileDataViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.UploadDateTime != null) instance.UploadDateTime = new Date(instance.UploadDateTime);
        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_ActorLogo_FileDataViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_ActorLogo_FileDataViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_ActorLogo_FileDataViewModel = new Actor_Actor_ActorLogo_FileDataViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_ActorLogo_FileDataViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_ActorLogo_FileDataViewModel(original: Actor_Actor_ActorLogo_FileDataViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.FileName !== undefined) this.FileName = original.FileName;
        if(original.MaxFileSize !== undefined) this.MaxFileSize = original.MaxFileSize;
        if(original.AllowedExtensions !== undefined) this.AllowedExtensions = original.AllowedExtensions;
        if(original.StorageMedium !== undefined) this.StorageMedium = original.StorageMedium;
        if(original.UploadedBy !== undefined) this.UploadedBy = original.UploadedBy;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.UploadDateTime)) this.UploadDateTime = new Date(original.UploadDateTime);
        if(original.FolderPath !== undefined) this.FolderPath = original.FolderPath;
        if(original.Description !== undefined) this.Description = original.Description;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_ActorLogo_FileDataViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_ActorLogo_FileDataViewModel {
        var reduced = Actor_Actor_ActorLogo_FileDataViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Id:
    any;
public FileName:
    any;
public MaxFileSize:
    any;
public AllowedExtensions:
    any;
public StorageMedium:
    any;
public UploadedBy:
    any;
public UploadDateTime:
    any;
public FolderPath:
    any;
public Description:
    any;
    public _versionTimestamp?: string;
}

export enum $StorageMedium {
    FileSystem,DataBase
}
export class Actor_Actor_AddedBy_DigicircUserViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.LockoutEndDate != null) instance.LockoutEndDate = new Date(instance.LockoutEndDate);
        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_AddedBy_DigicircUserViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_AddedBy_DigicircUserViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_AddedBy_DigicircUserViewModel = new Actor_Actor_AddedBy_DigicircUserViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_AddedBy_DigicircUserViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_AddedBy_DigicircUserViewModel(original: Actor_Actor_AddedBy_DigicircUserViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.AccessFailedCount !== undefined) this.AccessFailedCount = original.AccessFailedCount;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.EmailConfirmed !== undefined) this.EmailConfirmed = original.EmailConfirmed;
        if(original.LockoutEnabled !== undefined) this.LockoutEnabled = original.LockoutEnabled;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.LockoutEndDate)) this.LockoutEndDate = new Date(original.LockoutEndDate);
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.PhoneNumber !== undefined) this.PhoneNumber = original.PhoneNumber;
        if(original.PhoneNumberConfirmed !== undefined) this.PhoneNumberConfirmed = original.PhoneNumberConfirmed;
        if(original.TwoFactorEnabled !== undefined) this.TwoFactorEnabled = original.TwoFactorEnabled;
        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_AddedBy_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_AddedBy_DigicircUserViewModel {
        var reduced = Actor_Actor_AddedBy_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public AccessFailedCount:
    any;
public Email:
    any;
public EmailConfirmed:
    any;
public LockoutEnabled:
    any;
public LockoutEndDate:
    any;
public Name:
    any;
public PhoneNumber:
    any;
public PhoneNumberConfirmed:
    any;
public TwoFactorEnabled:
    any;
public UserName:
    any;
}

export class Actor_Actor_Cluster_ActorViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_Cluster_ActorViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_Cluster_ActorViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_Cluster_ActorViewModel = new Actor_Actor_Cluster_ActorViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_Cluster_ActorViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_Cluster_ActorViewModel(original: Actor_Actor_Cluster_ActorViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.GetCountOfClusterMembers !== undefined) this.GetCountOfClusterMembers = original.GetCountOfClusterMembers;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.MemberOfCluster !== undefined) this.MemberOfCluster = original.MemberOfCluster;
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.ShortDescription !== undefined) this.ShortDescription = original.ShortDescription;
        if(original.SpecifiedEnityType !== undefined) this.SpecifiedEnityType = original.SpecifiedEnityType;
        if(original.Url !== undefined) this.Url = original.Url;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_Cluster_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_Cluster_ActorViewModel {
        var reduced = Actor_Actor_Cluster_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Description:
    any;
public Email:
    any;
public GetCountOfClusterMembers:
    any;
public Id:
    any;
public MemberOfCluster:
    any;
public Name:
    any;
public ShortDescription:
    any;
public SpecifiedEnityType:
    any;
public Url:
    any;
    public _versionTimestamp?: string;
}

export class Actor_Actor_Administrators_DigicircUserViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.LockoutEndDate != null) instance.LockoutEndDate = new Date(instance.LockoutEndDate);
        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_Administrators_DigicircUserViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_Administrators_DigicircUserViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_Administrators_DigicircUserViewModel = new Actor_Actor_Administrators_DigicircUserViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_Administrators_DigicircUserViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_Administrators_DigicircUserViewModel(original: Actor_Actor_Administrators_DigicircUserViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.AccessFailedCount !== undefined) this.AccessFailedCount = original.AccessFailedCount;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.EmailConfirmed !== undefined) this.EmailConfirmed = original.EmailConfirmed;
        if(original.FirstName !== undefined) this.FirstName = original.FirstName;
        if(original.LastName !== undefined) this.LastName = original.LastName;
        if(original.LockoutEnabled !== undefined) this.LockoutEnabled = original.LockoutEnabled;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.LockoutEndDate)) this.LockoutEndDate = new Date(original.LockoutEndDate);
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.PhoneNumber !== undefined) this.PhoneNumber = original.PhoneNumber;
        if(original.PhoneNumberConfirmed !== undefined) this.PhoneNumberConfirmed = original.PhoneNumberConfirmed;
        if(original.SubscribeToNewsLetter !== undefined) this.SubscribeToNewsLetter = original.SubscribeToNewsLetter;
        if(original.TwoFactorEnabled !== undefined) this.TwoFactorEnabled = original.TwoFactorEnabled;
        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_Administrators_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_Administrators_DigicircUserViewModel {
        var reduced = Actor_Actor_Administrators_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public AccessFailedCount:
    any;
public Email:
    any;
public EmailConfirmed:
    any;
public FirstName:
    any;
public LastName:
    any;
public LockoutEnabled:
    any;
public LockoutEndDate:
    any;
public Name:
    any;
public PhoneNumber:
    any;
public PhoneNumberConfirmed:
    any;
public SubscribeToNewsLetter:
    any;
public TwoFactorEnabled:
    any;
public UserName:
    any;
}

export class Points_ActorViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: Points_ActorViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Points_ActorViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Points_ActorViewModel = new Points_ActorViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydratePoints_ActorViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydratePoints_ActorViewModel(original: Points_ActorViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.Url !== undefined) this.Url = original.Url;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Points_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Points_ActorViewModel {
        var reduced = Points_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Description:
    any;
public Email:
    any;
public Id:
    any;
public Name:
    any;
public Url:
    any;
    public _versionTimestamp?: string;
}

export class SelectedSector_SectorTypeViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        return instance;
    }

    public static _initializeFrom(original: SelectedSector_SectorTypeViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): SelectedSector_SectorTypeViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        SelectedSector_SectorTypeViewModel = new SelectedSector_SectorTypeViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSelectedSector_SectorTypeViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSelectedSector_SectorTypeViewModel(original: SelectedSector_SectorTypeViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.Code !== undefined) this.Code = original.Code;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Value !== undefined) this.Value = original.Value;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = SelectedSector_SectorTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): SelectedSector_SectorTypeViewModel {
        var reduced = SelectedSector_SectorTypeViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Code:
    any;
public Id:
    any;
public Value:
    any;
}

export class SignInUser_DigicircUserViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.LockoutEndDate != null) instance.LockoutEndDate = new Date(instance.LockoutEndDate);
        return instance;
    }

    public static _initializeFrom(original: SignInUser_DigicircUserViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): SignInUser_DigicircUserViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        SignInUser_DigicircUserViewModel = new SignInUser_DigicircUserViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateSignInUser_DigicircUserViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateSignInUser_DigicircUserViewModel(original: SignInUser_DigicircUserViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.AccessFailedCount !== undefined) this.AccessFailedCount = original.AccessFailedCount;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.EmailConfirmed !== undefined) this.EmailConfirmed = original.EmailConfirmed;
        if(original.LockoutEnabled !== undefined) this.LockoutEnabled = original.LockoutEnabled;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.LockoutEndDate)) this.LockoutEndDate = new Date(original.LockoutEndDate);
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.PhoneNumber !== undefined) this.PhoneNumber = original.PhoneNumber;
        if(original.PhoneNumberConfirmed !== undefined) this.PhoneNumberConfirmed = original.PhoneNumberConfirmed;
        if(original.TwoFactorEnabled !== undefined) this.TwoFactorEnabled = original.TwoFactorEnabled;
        if(original.UserName !== undefined) this.UserName = original.UserName;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = SignInUser_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): SignInUser_DigicircUserViewModel {
        var reduced = SignInUser_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public AccessFailedCount:
    any;
public Email:
    any;
public EmailConfirmed:
    any;
public LockoutEnabled:
    any;
public LockoutEndDate:
    any;
public Name:
    any;
public PhoneNumber:
    any;
public PhoneNumberConfirmed:
    any;
public TwoFactorEnabled:
    any;
public UserName:
    any;
}

}
