// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
namespace DigicircMatchmaking.ViewModels.ActorsToAdministrators {
export class ActorsToAdministratorsViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.Actor != null)
            instance.Actor = Actor_ActorViewModel._lightCast(instance.Actor);
        return instance;
    }

    public static _initializeFrom(original: ActorsToAdministratorsViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): ActorsToAdministratorsViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        ActorsToAdministratorsViewModel = new ActorsToAdministratorsViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActorsToAdministratorsViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActorsToAdministratorsViewModel(original: ActorsToAdministratorsViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;


        if(original.Actor !== undefined) this.Actor = Actor_ActorViewModel._initializeFrom(original.Actor, ignoreReadOnlyProperties, context);
        this.PickListSelectedItemKeys = original.PickListSelectedItemKeys;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = ActorsToAdministratorsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
            ActorsToAdministratorsViewModel._deleteDropDownInitialValues(reduced);
            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): ActorsToAdministratorsViewModel {
        var reduced = ActorsToAdministratorsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
        ActorsToAdministratorsViewModel._deleteDropDownInitialValues(reduced);
        return reduced;
    }

    public static _deleteDropDownInitialValues(reduced: ActorsToAdministratorsViewModel) {
        if (reduced == null) return;



    }
public Actor:
    any;
public PickListSelectedItemKeys:
    any[];
}

export class Actor_ActorViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
        this.Administrators = new Array<any>();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;


        if(instance.Administrators != null) {
            for(let i = 0; i < instance.Administrators.length; i++) {
                instance.Administrators[i] = Actor_Actor_Administrators_DigicircUserViewModel._lightCast(instance.Administrators[i]);

            }
        }
        return instance;
    }

    public static _initializeFrom(original: Actor_ActorViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_ActorViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_ActorViewModel = new Actor_ActorViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_ActorViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_ActorViewModel(original: Actor_ActorViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if (original._versionTimestamp !== undefined) this._versionTimestamp = original._versionTimestamp;
        if(original.Id !== undefined) this.Id = original.Id;
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.Description !== undefined) this.Description = original.Description;
        if(original.ShortDescription !== undefined) this.ShortDescription = original.ShortDescription;
        if(original.Url !== undefined) this.Url = original.Url;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.SpecifiedEnityType !== undefined) this.SpecifiedEnityType = original.SpecifiedEnityType;
        if(original.MemberOfCluster !== undefined) this.MemberOfCluster = original.MemberOfCluster;
        if(original.GetCountOfClusterMembers !== undefined) this.GetCountOfClusterMembers = original.GetCountOfClusterMembers;
        if(original.ClusterName !== undefined) this.ClusterName = original.ClusterName;

        if(original.Administrators != null) {
            for(let i = 0; i < original.Administrators.length; i++) {
                this.Administrators.push(Actor_Actor_Administrators_DigicircUserViewModel._initializeFrom(original.Administrators[i], ignoreReadOnlyProperties, context));
            }
        }

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_ActorViewModel {
        var reduced = Actor_ActorViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public Id:
    any;
public Name:
    any;
public Description:
    any;
public ShortDescription:
    any;
public Url:
    any;
public Email:
    any;
public SpecifiedEnityType:
    any;
public MemberOfCluster:
    any;
public GetCountOfClusterMembers:
    any;
public ClusterName:
    any;
public Administrators:
    Array<any>;
    public _versionTimestamp?: string;
}

export class Actor_Actor_Administrators_DigicircUserViewModel extends BaseClass.ViewModel  {
    public constructor() {
        super();
    }


    public static _lightCast(instance: any): any {
        if (instance == null) return;

        if(instance.LockoutEndDate != null) instance.LockoutEndDate = new Date(instance.LockoutEndDate);
        return instance;
    }

    public static _initializeFrom(original: Actor_Actor_Administrators_DigicircUserViewModel, ignoreReadOnlyProperties: boolean = false, context = new Joove.DTOHelper()): Actor_Actor_Administrators_DigicircUserViewModel {
        if(original == null) return null;
        // if (context.Has(original)) {
        //    return context.Get(original);
        // }
var result:
        Actor_Actor_Administrators_DigicircUserViewModel = new Actor_Actor_Administrators_DigicircUserViewModel();
        if (context != null && context.fillDb == true) {
            context.addToDb(original);
        }
        result._hydrateActor_Actor_Administrators_DigicircUserViewModel(original, ignoreReadOnlyProperties, context);
        // context.Add(original, result);
        return result;
    }


    public _hydrateActor_Actor_Administrators_DigicircUserViewModel(original: Actor_Actor_Administrators_DigicircUserViewModel, ignoreReadOnlyProperties: boolean, context = new Joove.DTOHelper()): void {
        if(original == null) return;


        if(original._key !== undefined) this._key = original._key;
        if(original._clientKey !== undefined) this._clientKey = original._clientKey;
        if(original._originalTypeClassName !== undefined) this._originalTypeClassName = original._originalTypeClassName;
        if(original._typeHash !== undefined) this._typeHash = original._typeHash;

        if(original.UserName !== undefined) this.UserName = original.UserName;
        if(original.EmailConfirmed !== undefined) this.EmailConfirmed = original.EmailConfirmed;
        if(original.LockoutEnabled !== undefined) this.LockoutEnabled = original.LockoutEnabled;
        if(original.PhoneNumberConfirmed !== undefined) this.PhoneNumberConfirmed = original.PhoneNumberConfirmed;
        if(original.TwoFactorEnabled !== undefined) this.TwoFactorEnabled = original.TwoFactorEnabled;
        if(original.AccessFailedCount !== undefined) this.AccessFailedCount = original.AccessFailedCount;
        if(original.Name !== undefined) this.Name = original.Name;
        if(original.Email !== undefined) this.Email = original.Email;
        if(original.PhoneNumber !== undefined) this.PhoneNumber = original.PhoneNumber;
        if(!CLMS.Framework.String.IsNullOrEmpty(original.LockoutEndDate)) this.LockoutEndDate = new Date(original.LockoutEndDate);
        if(original.FirstName !== undefined) this.FirstName = original.FirstName;
        if(original.LastName !== undefined) this.LastName = original.LastName;
        if(original.SubscribeToNewsLetter !== undefined) this.SubscribeToNewsLetter = original.SubscribeToNewsLetter;

        this._reduceData = function(ignoreReadOnlyProperties: boolean) {
            var reduced = Actor_Actor_Administrators_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

            return reduced;
        };
    } /* end _initializeFrom() */


    public _reduceData(ignoreReadOnlyProperties: boolean): Actor_Actor_Administrators_DigicircUserViewModel {
        var reduced = Actor_Actor_Administrators_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);

        return reduced;
    }
public UserName:
    any;
public EmailConfirmed:
    any;
public LockoutEnabled:
    any;
public PhoneNumberConfirmed:
    any;
public TwoFactorEnabled:
    any;
public AccessFailedCount:
    any;
public Name:
    any;
public Email:
    any;
public PhoneNumber:
    any;
public LockoutEndDate:
    any;
public FirstName:
    any;
public LastName:
    any;
public SubscribeToNewsLetter:
    any;
}

}
