var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
var DigicircMatchmaking;
(function (DigicircMatchmaking) {
    var ViewModels;
    (function (ViewModels) {
        var MyActors;
        (function (MyActors) {
            var MyActorsViewModel = /** @class */ (function (_super) {
                __extends(MyActorsViewModel, _super);
                function MyActorsViewModel() {
                    return _super.call(this) || this;
                }
                MyActorsViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.CurrentUser != null)
                        instance.CurrentUser = CurrentUser_DigicircUserViewModel._lightCast(instance.CurrentUser);
                    return instance;
                };
                MyActorsViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new MyActorsViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateMyActorsViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                MyActorsViewModel.prototype._hydrateMyActorsViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.CurrentUser !== undefined)
                        this.CurrentUser = CurrentUser_DigicircUserViewModel._initializeFrom(original.CurrentUser, ignoreReadOnlyProperties, context);
                    this.ListActorDataSetSelectedItemKeys = original.ListActorDataSetSelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = MyActorsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        MyActorsViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                MyActorsViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = MyActorsViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    MyActorsViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                MyActorsViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                return MyActorsViewModel;
            }(DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel));
            MyActors.MyActorsViewModel = MyActorsViewModel;
            var CurrentUser_DigicircUserViewModel = /** @class */ (function (_super) {
                __extends(CurrentUser_DigicircUserViewModel, _super);
                function CurrentUser_DigicircUserViewModel() {
                    return _super.call(this) || this;
                }
                CurrentUser_DigicircUserViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.LockoutEndDate != null)
                        instance.LockoutEndDate = new Date(instance.LockoutEndDate);
                    return instance;
                };
                CurrentUser_DigicircUserViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new CurrentUser_DigicircUserViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateCurrentUser_DigicircUserViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                CurrentUser_DigicircUserViewModel.prototype._hydrateCurrentUser_DigicircUserViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    if (original.EmailConfirmed !== undefined)
                        this.EmailConfirmed = original.EmailConfirmed;
                    if (original.LockoutEnabled !== undefined)
                        this.LockoutEnabled = original.LockoutEnabled;
                    if (original.PhoneNumberConfirmed !== undefined)
                        this.PhoneNumberConfirmed = original.PhoneNumberConfirmed;
                    if (original.TwoFactorEnabled !== undefined)
                        this.TwoFactorEnabled = original.TwoFactorEnabled;
                    if (original.AccessFailedCount !== undefined)
                        this.AccessFailedCount = original.AccessFailedCount;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.Email !== undefined)
                        this.Email = original.Email;
                    if (original.PhoneNumber !== undefined)
                        this.PhoneNumber = original.PhoneNumber;
                    if (!CLMS.Framework.String.IsNullOrEmpty(original.LockoutEndDate))
                        this.LockoutEndDate = new Date(original.LockoutEndDate);
                    if (original.FirstName !== undefined)
                        this.FirstName = original.FirstName;
                    if (original.LastName !== undefined)
                        this.LastName = original.LastName;
                    if (original.SubscribeToNewsLetter !== undefined)
                        this.SubscribeToNewsLetter = original.SubscribeToNewsLetter;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = CurrentUser_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                CurrentUser_DigicircUserViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = CurrentUser_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return CurrentUser_DigicircUserViewModel;
            }(BaseClass.ViewModel));
            MyActors.CurrentUser_DigicircUserViewModel = CurrentUser_DigicircUserViewModel;
        })(MyActors = ViewModels.MyActors || (ViewModels.MyActors = {}));
    })(ViewModels = DigicircMatchmaking.ViewModels || (DigicircMatchmaking.ViewModels = {}));
})(DigicircMatchmaking || (DigicircMatchmaking = {}));
