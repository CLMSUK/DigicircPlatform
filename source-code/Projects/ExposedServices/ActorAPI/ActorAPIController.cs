// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Web;
using System.Web.Http;
using zAppDev.DotNet.Framework.Mvc;
using AppCode;
using Identity = zAppDev.DotNet.Framework.Identity;
using zAppDev.DotNet.Framework.Identity;
namespace DigicircMatchmaking.Web.Code.WebApi
{
    public class ActorAPIAddResourceDto
    {
        public DigicircMatchmaking.Services.ActorAPI.DataContracts.ProductDTO product
        {
            get;
            set;
        } public int? id
        {
            get;
            set;
        }
    }

    [RoutePrefix("api/ActorAPI")]
    [WebApiThrottle.EnableThrottling()]
    public class ActorAPIController : BasicApiCtrl
    {

        /// <summary>
        ///
        /// </summary>
        /// <returns>Response</returns>
        [CustomWebApiActionFilter()]
        [CustomWebApiAuthorize(LogEnabled = false)]

        [Route("addResource")]
        [HttpPost]
        public DigicircMatchmaking.Services.ActorAPI.DataContracts.ResponseDTO AddResource([FromBody]ActorAPIAddResourceDto data)
        {
            var request = ((HttpContextBase)Request.Properties["MS_HttpContext"]).Request;
            var _RequestSourceIp = request.UserHostAddress;
            var _UserName = Identity.IdentityHelper.GetCurrentUserName();
            var _headers = Request.Headers.AsEnumerable().ToDictionary(e => e.Key, e => e.Value.ToList());
            var httpContext = (HttpContextWrapper)Request.Properties["MS_HttpContext"];
            if(data == null)
            {
                throw new ArgumentNullException(nameof(data), "No input provided.");
            }
            var product = data.product;
            var id = data.id;
            var result =  (new DigicircMatchmaking.Services.ActorAPIService(_headers)).AddResource(product,id,_RequestSourceIp, _UserName);
            return result;
        }
    }
}
