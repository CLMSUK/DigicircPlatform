
// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.

using System;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Collections;
using zAppDev.DotNet.Framework.Utilities;
using zAppDev.DotNet.Framework.Configuration;
using zAppDev.DotNet.Framework.Data.Domain;
using NHibernate.Linq;

using DigicircMatchmaking.DAL;
using DigicircMatchmaking.DAL.Queries;
namespace DigicircMatchmaking.BO
{
    /// <summary>
    /// The MaterialBackend extensions
    /// </summary>
    public static class MaterialBackendExtensions
    {
        public static void CreateKnowledgeMaterial(DigicircMatchmaking.BO.Material material)
        {
            if (zAppDev.DotNet.Framework.Utilities.Common.GetConfigurationKey("DontCallKnowledgeGraph") == "true")
            {
                return;
            }
            DigicircMatchmaking.BO.MaterialCreateRequest req = new DigicircMatchmaking.BO.MaterialCreateRequest();
            DigicircMatchmaking.BO.MaterialCreateStatements stat = new DigicircMatchmaking.BO.MaterialCreateStatements();
            stat.Statement = "CREATE (n:Material $props) RETURN n";
            stat.Parameters = new DigicircMatchmaking.BO.MaterialCreateParameters();
            stat.Parameters.Props = new DigicircMatchmaking.BO.MaterialCreateProps();
            stat.Parameters.Props.Id = (material?.Id ?? 0);
            stat.Parameters.Props.Name = (material?.Name ?? "");
            stat.Parameters.Props.Decription = (material?.Description ?? "");
            stat.Parameters.Props.HsSpecific = (material?.HsSpecific ?? "");
            req?.AddStatements(stat);
            DigicircMatchmaking.ExternalStructs.KnowledgeBase.MaterialCreateRequest reqParsed = (new DigicircMatchmaking.BO.KnowledgeBaseDataTransformation.Transformer()).MaterialCreateRequest_To_MaterialCreateRequestReversed(req);
            DigicircMatchmaking.BLL.ExternalRestServices.KnowledgeBaseRestService.CreateMaterial(reqParsed);
        }


        public static void DeleteKnowledgeMaterial(DigicircMatchmaking.BO.Material material)
        {
            if (zAppDev.DotNet.Framework.Utilities.Common.GetConfigurationKey("DontCallKnowledgeGraph") == "true")
            {
                return;
            }
            DigicircMatchmaking.BO.MaterialCreateRequest req = new DigicircMatchmaking.BO.MaterialCreateRequest();
            req?.AddStatements(DigicircMatchmaking.BO.MaterialBackendExtensions.DeleteMaterialStatement(material));
            DigicircMatchmaking.ExternalStructs.KnowledgeBase.MaterialCreateRequest reqParsed = (new DigicircMatchmaking.BO.KnowledgeBaseDataTransformation.Transformer()).MaterialCreateRequest_To_MaterialCreateRequestReversed(req);
            DigicircMatchmaking.BLL.ExternalRestServices.KnowledgeBaseRestService.CreateMaterial(reqParsed);
        }


        public static DigicircMatchmaking.BO.MaterialCreateStatements DeleteMaterialStatement(DigicircMatchmaking.BO.Material material)
        {
            DigicircMatchmaking.BO.MaterialCreateStatements stat = new DigicircMatchmaking.BO.MaterialCreateStatements();
            stat.Statement = "MATCH (n:Material {Id: $props.Id}) DETACH DELETE n";
            stat.Parameters = new DigicircMatchmaking.BO.MaterialCreateParameters();
            stat.Parameters.Props = new DigicircMatchmaking.BO.MaterialCreateProps();
            stat.Parameters.Props.Id = (material?.Id ?? 0);
            return stat;
        }


        public static DigicircMatchmaking.BO.MaterialCreateStatements UpdateMaterialStatement(DigicircMatchmaking.BO.Material material)
        {
            DigicircMatchmaking.BO.MaterialCreateStatements stat = new DigicircMatchmaking.BO.MaterialCreateStatements();
            stat.Statement = "MATCH (m:Material {Id: $props.Id}) SET m = $props RETURN m";
            stat.Parameters = new DigicircMatchmaking.BO.MaterialCreateParameters();
            stat.Parameters.Props = new DigicircMatchmaking.BO.MaterialCreateProps();
            stat.Parameters.Props.Id = (material?.Id ?? 0);
            stat.Parameters.Props.Name = (material?.Name ?? "");
            stat.Parameters.Props.Decription = (material?.Description ?? "");
            stat.Parameters.Props.HsSpecific = (material?.HsSpecific ?? "");
            return stat;
        }


        public static void UpdateKnowledgeMaterial(DigicircMatchmaking.BO.Material material)
        {
            if (zAppDev.DotNet.Framework.Utilities.Common.GetConfigurationKey("DontCallKnowledgeGraph") == "true")
            {
                return;
            }
            DigicircMatchmaking.BO.MaterialCreateRequest req = new DigicircMatchmaking.BO.MaterialCreateRequest();
            req?.AddStatements(DigicircMatchmaking.BO.MaterialBackendExtensions.UpdateMaterialStatement(material));
            DigicircMatchmaking.ExternalStructs.KnowledgeBase.MaterialCreateRequest reqParsed = (new DigicircMatchmaking.BO.KnowledgeBaseDataTransformation.Transformer()).MaterialCreateRequest_To_MaterialCreateRequestReversed(req);
            DigicircMatchmaking.BLL.ExternalRestServices.KnowledgeBaseRestService.CreateMaterial(reqParsed);
        }




    }
}
