<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) CLMS UK. All rights reserved.-->
<!-- Licensed under the Custom License. See LICENSE file in the project root for full license information.-->
<!-- This was autogenerated by zAppDev. -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="true" auto-import="false" assembly="DigicircMatchmaking.Backend" namespace="DigicircMatchmaking.BO">
    <class name="CircularEconomyReport" table="`CircularEconomyReports`" schema="`dbo`">
        <cache usage="read-write" />
        <id name="Id" column="`Id`" type="System.Int32">
            <generator class="NHibernate.Id.Enhanced.TableGenerator">
                <param name="increment_size">200</param>
                <param name="segment_value">CircularEconomyReports</param>
                <param name="optimizer">pooled-lo</param>
            </generator>
        </id>
        <version name="VersionTimestamp" column="`VersionTimestamp`" type="System.Int32" generated="never" unsaved-value="1">
            <column name="`VersionTimestamp`" not-null="true" sql-type="int" default="1" />
        </version>
        <property name="ExperienceInCircularEconomy" column="`ExperienceInCircularEconomy`" type="System.Boolean" not-null="false" />
        <property name="SpecifyExperienceInCircularEconomy" column="`SpecifyExperienceInCircularEconomy`" type="String" not-null="false" length="250" />
        <property name="DigitalExpertise" column="`DigitalExpertise`" type="" not-null="false" />
        <property name="DigitalProviredNeeded" column="`DigitalProviredNeeded`" type="System.Boolean" not-null="false" />
        <property name="ThematicExpertiseNeeded" column="`ThematicExpertiseNeeded`" type="System.Boolean" not-null="false" />
        <bag batch-size="100" name="DesiredThematicExpertises" table="`ThematicExpertises_To_CircularEconomyReports`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`CircularEconomyInformation_DesiredThematicExpertises`" foreign-key="FK_CircularEconomyRepo_ThematicExpertises_DesiredThematicExpe" />
            <many-to-many class="ThematicExpertise" column="`DesiredThematicExpertises`" />
        </bag>
        <many-to-one name="DesiredSMESector" access="field.camelcase" class="SectorType" column="`DesiredSMESector`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_CircularEconomyReports_SectorTypes_DesiredSMESector" />
        <bag batch-size="100" name="DesiredGeographicalArea" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`CircularEconomyInformation_DesiredGeographicalArea`" foreign-key="FK_CircularEconomyRepo_GeographicalAreas_DesiredGeographical" />
            <one-to-many class="GeographicalArea" />
        </bag>
        <bag batch-size="100" name="Resources" access="field.camelcase" cascade="persist,merge,save-update" order-by="`ValidFrom`">
            <cache usage="read-write" />
            <key column="`CircularEconomyReport_Resources`" foreign-key="FK_CircularEconomyReports_Products_Resources" />
            <one-to-many class="Product" />
        </bag>
        <bag batch-size="100" name="DesiredResources" access="field.camelcase" cascade="persist,merge,save-update" order-by="`ValidFrom`">
            <cache usage="read-write" />
            <key column="`CircularEconomyReport_1_DesiredResources`" foreign-key="FK_CircularEconomyReports_Products_DesiredResources" />
            <one-to-many class="Product" />
        </bag>
    </class>
</hibernate-mapping>