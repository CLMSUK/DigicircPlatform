<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (c) CLMS UK. All rights reserved.-->
<!-- Licensed under the Custom License. See LICENSE file in the project root for full license information.-->
<!-- This was autogenerated by zAppDev. -->
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" default-lazy="true" auto-import="false" assembly="DigicircMatchmaking.Backend" namespace="DigicircMatchmaking.BO">
    <class name="Actor" table="`Actors`" schema="`dbo`">
        <cache usage="read-write" />
        <id name="Id" column="`Id`" type="System.Int32">
            <generator class="NHibernate.Id.Enhanced.TableGenerator">
                <param name="increment_size">200</param>
                <param name="segment_value">Actors</param>
                <param name="optimizer">pooled-lo</param>
            </generator>
        </id>
        <version name="VersionTimestamp" column="`VersionTimestamp`" type="System.Int32" generated="never" unsaved-value="1">
            <column name="`VersionTimestamp`" not-null="true" sql-type="int" default="1" />
        </version>
        <property name="Name" column="`Name`" type="String" not-null="false" length="255" />
        <property name="Description" column="`Description`" type="String" not-null="false" length="4001" />
        <property name="Url" column="`Url`" type="String" not-null="false" length="4001" />
        <property name="Email" column="`Email`" type="String" not-null="false" length="4001" />
        <property name="SpecifiedEnityType" column="`SpecifiedEnityType`" type="String" not-null="false" length="250" />
        <property name="MemberOfCluster" column="`MemberOfCluster`" type="System.Boolean" not-null="false" />
        <property name="ClusterName" column="`ClusterName`" type="String" not-null="false" length="100" />
        <property name="Keywords" column="`Keywords`" type="String" not-null="false" length="4001" />
        <property name="HasSites" column="`HasSites`" type="System.Boolean" not-null="false" />
        <many-to-one name="Address" access="field.camelcase" class="Address" column="`Address`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_Actors_Addresses_Address" />
        <many-to-one name="AddedBy" access="field.camelcase" class="DigicircUser" column="`AddedBy`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_Actors_DigicircUsers_AddedBy" />
        <many-to-one name="CircularEconomyRequirements" access="field.camelcase" class="CircularEconomyReport" column="`CircularEconomyRequirements`" cascade="persist,merge,all-delete-orphan" unique="false" foreign-key="FK_Actors_CircularEconomyReports_CircularEconomyRequirements" />
        <many-to-one name="CircularEconomyProviderReport" access="field.camelcase" class="CircularEconomyProviderReport" column="`CircularEconomyProviderReport`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_Actors_CircularEconomyProv_CircularEconomyProv" />
        <many-to-one name="ActorLogo" access="field.camelcase" class="FileData" column="`ActorLogo`" cascade="persist,merge,save-update" unique="false" foreign-key="FK_Actors_FileDataTbl_ActorLogo" />
        <many-to-one name="Cluster" access="field.camelcase" class="Actor" column="`Cluster`" cascade="persist,merge,save-update" foreign-key="FK_Actors_Actors_Cluster" />
        <bag batch-size="100" name="Actors" access="field.camelcase" inverse="true" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Cluster`" foreign-key="FK_Actors_Actors_Actors" />
            <one-to-many class="Actor" />
        </bag>
        <bag batch-size="100" name="Administrators" table="`DigicircUsers_To_Actors`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`ActorsCanManage_Administrators`" foreign-key="FK_Actors_DigicircUsers_Administrators" />
            <many-to-many class="DigicircUser" column="`Administrators`" />
        </bag>
        <bag batch-size="100" name="Sites" access="field.camelcase" cascade="persist,merge,save-update">
            <cache usage="read-write" />
            <key column="`Actor_Sites`" foreign-key="FK_Actors_Addresses_Sites" />
            <one-to-many class="Address" />
        </bag>
        <many-to-one name="EntityType" access="field.camelcase" class="EntityType" column="`EntityType`" cascade="persist,merge,save-update" foreign-key="FK_Actors_EntityTypes_EntityType" />
        <bag batch-size="100" name="SectorTypes" table="`Actors_To_SectorTypes`" schema="`dbo`" access="field.camelcase" cascade="persist,merge,save-update" inverse="true">
            <cache usage="read-write" />
            <key column="`Actor`" foreign-key="FK_Actors_SectorTypes_SectorTypes" />
            <many-to-many class="SectorType" column="`SectorTypes`" />
        </bag>
    </class>
</hibernate-mapping>