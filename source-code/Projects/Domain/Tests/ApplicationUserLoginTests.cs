// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.

using System;
using System.Collections.Generic;
using System.Linq;
using NUnit.Framework;
using FluentNHibernate.Testing;
using DigicircMatchmaking.BO;
using DigicircMatchmaking.BoTesting.Tests.Common;
using DigicircMatchmaking.DAL;

namespace DigicircMatchmaking.BoTesting.Tests
{
    /// <summary>
    ///This is a test class for ApplicationUserLoginTest and is intended
    ///to contain all ApplicationUserLoginTest NUnit Tests
    ///</summary>
    [TestFixture]
    [Description("ApplicationUserLogin Repository Tests")]
    [Category("ApplicationUserLogin Repository Tests")]
    internal class ApplicationUserLoginTests : NHibernateFixture
    {
        /// <summary>
        ///A test for testing the persistence of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the persistence of `ApplicationUserLogin`")]
        [Order(0)]
        public void ApplicationUserLogin_persistence_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var _applicationsystembo_user_logins = new zAppDev.DotNet.Framework.Identity.Model.ApplicationUser
            {
                UserName = "ab159be3-91e5-45a6-9967-057b78ca78e5ApplicationUser_UserName",
                PasswordHash = "ApplicationUser_PasswordHash",
                SecurityStamp = "ApplicationUser_SecurityStamp",
                EmailConfirmed = true,
                LockoutEnabled = true,
                PhoneNumberConfirmed = true,
                TwoFactorEnabled = true,
                AccessFailedCount = 4276,
                Name = "ApplicationUser_Name",
                Email = "ApplicationUser_Email",
                PhoneNumber = "ApplicationUser_PhoneNumber",
                LockoutEndDate = now,
            };
            new PersistenceSpecification<zAppDev.DotNet.Framework.Identity.Model.ApplicationUserLogin>(Session)
            .CheckProperty(p => p.LoginProvider, "ApplicationUserLogin_LoginProvider")
            .CheckProperty(p => p.ProviderKey, "ApplicationUserLogin_ProviderKey")
            .CheckReference(p => p.User, _applicationsystembo_user_logins)
            .VerifyTheMappings();
        }

        /// <summary>
        ///A test for testing the filtering of an object from Db
        ///</summary>
        [Test]
        [Description("This tests the filtering of `ApplicationUserLogin`")]
        [Order(1)]
        public void ApplicationUserLogin_filtering_test()
        {
            DateTime now = DateTime.Now;
            // Get datetime without milliseconds
            now = new DateTime(now.Ticks - (now.Ticks % TimeSpan.TicksPerSecond), now.Kind);
            var repo = new Repository(Session);
            List<zAppDev.DotNet.Framework.Identity.Model.ApplicationUserLogin> results = null;
            Assert.DoesNotThrow(() =>
            {
                results = repo.GetAsQueryable<zAppDev.DotNet.Framework.Identity.Model.ApplicationUserLogin>(
                              a => true
                              && (a.LoginProvider != string.Empty && a.LoginProvider != null)
                              && (a.ProviderKey != string.Empty && a.ProviderKey != null)
                              && a.User != null
                              ,
                              cacheQuery: true)
                          .OrderBy(a => a)
                          .Skip(0)
                          .Take(3)
                          .ToList();
            });
            Assert.AreNotEqual(null, results);
        }
    }
}