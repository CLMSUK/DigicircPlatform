// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.

using System;
using System.IO;

using System.Text;
using System.Xml.Serialization;
using System.Linq;

namespace DigicircMatchmaking.ExternalStructs.KnowledgeBase
{
    [XmlRoot("MaterialCreateRequest")]
    public class MaterialCreateRequest
    {
        [XmlElement("statements")]
        [Newtonsoft.Json.JsonProperty("statements")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.MaterialCreateStatements[] Statements
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Statements?.Sum(x => x?._CalculatedKey)?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("statements")]
    [Newtonsoft.Json.JsonObject(Title = "statements")]
    public class MaterialCreateStatements
    {
        [XmlElement("statement")]
        [Newtonsoft.Json.JsonProperty("statement")]
        public string Statement
        {
            get;
            set;
        }

        [XmlElement("parameters")]
        [Newtonsoft.Json.JsonProperty("parameters")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.MaterialCreateParameters Parameters
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Statement?.ToString() +
                                           Parameters?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("parameters")]
    [Newtonsoft.Json.JsonObject(Title = "parameters")]
    public class MaterialCreateParameters
    {
        [XmlElement("props")]
        [Newtonsoft.Json.JsonProperty("props")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.MaterialCreateProps Props
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Props?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("props")]
    [Newtonsoft.Json.JsonObject(Title = "props")]
    public class MaterialCreateProps
    {
        [XmlElement("Name")]
        [Newtonsoft.Json.JsonProperty("Name")]
        public string Name
        {
            get;
            set;
        }

        [XmlElement("Decription")]
        [Newtonsoft.Json.JsonProperty("Decription")]
        public string Decription
        {
            get;
            set;
        }

        [XmlElement("HsSpecific")]
        [Newtonsoft.Json.JsonProperty("HsSpecific")]
        public string HsSpecific
        {
            get;
            set;
        }

        [XmlElement("Id")]
        [Newtonsoft.Json.JsonProperty("Id")]
        public int? Id
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Name?.ToString() +
                                           Decription?.ToString() +
                                           HsSpecific?.ToString() +
                                           Id?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("KnowledgeBaseResult")]
    public class KnowledgeBaseResult
    {
        [XmlElement("results")]
        [Newtonsoft.Json.JsonProperty("results")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.KnowledgeBaseResults[] Results
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Results?.Sum(x => x?._CalculatedKey)?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("results")]
    [Newtonsoft.Json.JsonObject(Title = "results")]
    public class KnowledgeBaseResults
    {
        [XmlElement("columns")]
        [Newtonsoft.Json.JsonProperty("columns")]
        public string[] Columns
        {
            get;
            set;
        }

        [XmlElement("data")]
        [Newtonsoft.Json.JsonProperty("data")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.KnowledgeBaseData[] Data
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Columns?.ToList()?.Count().ToString() +
                                           Data?.Sum(x => x?._CalculatedKey)?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("data")]
    [Newtonsoft.Json.JsonObject(Title = "data")]
    public class KnowledgeBaseData
    {
        [XmlElement("Row")]
        [Newtonsoft.Json.JsonProperty("Row")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.KnowledgeBaseRow[] Row
        {
            get;
            set;
        }

        [XmlElement("Meta")]
        [Newtonsoft.Json.JsonProperty("Meta")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.KnowledgeBaseMeta[] Meta
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Row?.Sum(x => x?._CalculatedKey)?.ToString() +
                                           Meta?.Sum(x => x?._CalculatedKey)?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("row")]
    [Newtonsoft.Json.JsonObject(Title = "row")]
    public class KnowledgeBaseRow
    {
        [XmlElement("Decription")]
        [Newtonsoft.Json.JsonProperty("Decription")]
        public string Decription
        {
            get;
            set;
        }

        [XmlElement("Name")]
        [Newtonsoft.Json.JsonProperty("Name")]
        public string Name
        {
            get;
            set;
        }

        [XmlElement("Id")]
        [Newtonsoft.Json.JsonProperty("Id")]
        public string Id
        {
            get;
            set;
        }

        [XmlElement("HsSpecific")]
        [Newtonsoft.Json.JsonProperty("HsSpecific")]
        public string HsSpecific
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Decription?.ToString() +
                                           Name?.ToString() +
                                           Id?.ToString() +
                                           HsSpecific?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("meta")]
    [Newtonsoft.Json.JsonObject(Title = "meta")]
    public class KnowledgeBaseMeta
    {
        [XmlElement("id")]
        [Newtonsoft.Json.JsonProperty("id")]
        public int? Id
        {
            get;
            set;
        }

        [XmlElement("type")]
        [Newtonsoft.Json.JsonProperty("type")]
        public string Type
        {
            get;
            set;
        }

        [XmlElement("deleted")]
        [Newtonsoft.Json.JsonProperty("deleted")]
        public bool Deleted
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Id?.ToString() +
                                           Type?.ToString() +
                                           (Deleted == true).ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ProcessCreateRequest")]
    public class ProcessCreateRequest
    {
        [XmlElement("statements")]
        [Newtonsoft.Json.JsonProperty("statements")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ProcessCreateStatements[] Statements
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Statements?.Sum(x => x?._CalculatedKey)?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("statements")]
    [Newtonsoft.Json.JsonObject(Title = "statements")]
    public class ProcessCreateStatements
    {
        [XmlElement("statement")]
        [Newtonsoft.Json.JsonProperty("statement")]
        public string Statement
        {
            get;
            set;
        }

        [XmlElement("parameters")]
        [Newtonsoft.Json.JsonProperty("parameters")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ProcessCreateParameters Parameters
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Statement?.ToString() +
                                           Parameters?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("parameters")]
    [Newtonsoft.Json.JsonObject(Title = "parameters")]
    public class ProcessCreateParameters
    {
        [XmlElement("props")]
        [Newtonsoft.Json.JsonProperty("props")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ProcessCreateProps Props
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Props?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("props")]
    [Newtonsoft.Json.JsonObject(Title = "props")]
    public class ProcessCreateProps
    {
        [XmlElement("Id")]
        [Newtonsoft.Json.JsonProperty("Id")]
        public int? Id
        {
            get;
            set;
        }

        [XmlElement("Name")]
        [Newtonsoft.Json.JsonProperty("Name")]
        public string Name
        {
            get;
            set;
        }

        [XmlElement("Notes")]
        [Newtonsoft.Json.JsonProperty("Notes")]
        public string Notes
        {
            get;
            set;
        }

        [XmlElement("Ref")]
        [Newtonsoft.Json.JsonProperty("Ref")]
        public string Ref
        {
            get;
            set;
        }

        [XmlElement("SourceId")]
        [Newtonsoft.Json.JsonProperty("SourceId")]
        public int? SourceId
        {
            get;
            set;
        }

        [XmlElement("ProductId")]
        [Newtonsoft.Json.JsonProperty("ProductId")]
        public int? ProductId
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Id?.ToString() +
                                           Name?.ToString() +
                                           Notes?.ToString() +
                                           Ref?.ToString() +
                                           SourceId?.ToString() +
                                           ProductId?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ActorCreateRequest")]
    public class ActorCreateRequest
    {
        [XmlElement("statements")]
        [Newtonsoft.Json.JsonProperty("statements")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ActorCreateStatements[] statements
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           statements?.Sum(x => x?._CalculatedKey)?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ActorCreateStatements")]
    public class ActorCreateStatements
    {
        [XmlElement("statement")]
        [Newtonsoft.Json.JsonProperty("statement")]
        public string statement
        {
            get;
            set;
        }

        [XmlElement("parameters")]
        [Newtonsoft.Json.JsonProperty("parameters")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ActorCreateParameters parameters
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           statement?.ToString() +
                                           parameters?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ActorCreateProps")]
    public class ActorCreateProps
    {
        [XmlElement("Id")]
        [Newtonsoft.Json.JsonProperty("Id")]
        public int? Id
        {
            get;
            set;
        }

        [XmlElement("Name")]
        [Newtonsoft.Json.JsonProperty("Name")]
        public string Name
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Id?.ToString() +
                                           Name?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ActorCreateParameters")]
    public class ActorCreateParameters
    {
        [XmlElement("props")]
        [Newtonsoft.Json.JsonProperty("props")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ActorCreateProps props
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           props?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ConnectActorMaterialProps")]
    public class ConnectActorMaterialProps
    {
        [XmlElement("ActorId")]
        [Newtonsoft.Json.JsonProperty("ActorId")]
        public int? ActorId
        {
            get;
            set;
        }

        [XmlElement("MaterialId")]
        [Newtonsoft.Json.JsonProperty("MaterialId")]
        public int? MaterialId
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           ActorId?.ToString() +
                                           MaterialId?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ConnectActorMaterialParameters")]
    public class ConnectActorMaterialParameters
    {
        [XmlElement("props")]
        [Newtonsoft.Json.JsonProperty("props")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ConnectActorMaterialProps props
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           props?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ConnectActorMaterialStatements")]
    public class ConnectActorMaterialStatements
    {
        [XmlElement("statement")]
        [Newtonsoft.Json.JsonProperty("statement")]
        public string statement
        {
            get;
            set;
        }

        [XmlElement("parameters")]
        [Newtonsoft.Json.JsonProperty("parameters")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ConnectActorMaterialParameters parameters
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           statement?.ToString() +
                                           parameters?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ConnectActorMaterialRequest")]
    public class ConnectActorMaterialRequest
    {
        [XmlElement("statements")]
        [Newtonsoft.Json.JsonProperty("statements")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ConnectActorMaterialStatements[] statements
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           statements?.Sum(x => x?._CalculatedKey)?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ListProducersMaterialRequest")]
    public class ListProducersMaterialRequest
    {
        [XmlElement("statements")]
        [Newtonsoft.Json.JsonProperty("statements")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ListProducersMaterialStatements[] statements
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           statements?.Sum(x => x?._CalculatedKey)?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ListProducersMaterialStatements")]
    public class ListProducersMaterialStatements
    {
        [XmlElement("statement")]
        [Newtonsoft.Json.JsonProperty("statement")]
        public string statement
        {
            get;
            set;
        }

        [XmlElement("parameters")]
        [Newtonsoft.Json.JsonProperty("parameters")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ListProducersMaterialParameters parameters
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           statement?.ToString() +
                                           parameters?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ListProducersMaterialParameters")]
    public class ListProducersMaterialParameters
    {
        [XmlElement("props")]
        [Newtonsoft.Json.JsonProperty("props")]
        public DigicircMatchmaking.ExternalStructs.KnowledgeBase.ListProducersMaterialProps props
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           props?._CalculatedKey?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("ListProducersMaterialProps")]
    public class ListProducersMaterialProps
    {
        [XmlElement("ActorId")]
        [Newtonsoft.Json.JsonProperty("ActorId")]
        public int? ActorId
        {
            get;
            set;
        }

        [XmlElement("MaterialId")]
        [Newtonsoft.Json.JsonProperty("MaterialId")]
        public int? MaterialId
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           ActorId?.ToString() +
                                           MaterialId?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }


}
