// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.

using System;
using System.IO;

using System.Text;
using System.Xml.Serialization;
using System.Linq;

namespace DigicircMatchmaking.ExternalStructs.TextSearch
{
    [XmlRoot("TextSearchRequest")]
    public class TextSearchRequest
    {
        [XmlElement("text")]
        [Newtonsoft.Json.JsonProperty("text")]
        public string Text
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Text?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }

    [XmlRoot("TextSearchResponse")]
    public class TextSearchResponse
    {
        [XmlElement("phrases")]
        [Newtonsoft.Json.JsonProperty("phrases")]
        public string[] Phrases
        {
            get;
            set;
        }

        [XmlElement("tags")]
        [Newtonsoft.Json.JsonProperty("tags")]
        public string Tags
        {
            get;
            set;
        }

        [XmlElement("_CalculatedKey")]
        [Newtonsoft.Json.JsonProperty("_CalculatedKey")]
        public int? _CalculatedKey
        {
            get
            {
                try
                {
                    var allPropsConcated = "_CalculatedKey-" +
                                           Phrases?.ToList()?.Count().ToString() +
                                           Tags?.ToString();
                    return allPropsConcated.GetHashCode();
                }
                catch (Exception)
                {
                    return 0;
                }
            }
            set {}
        }

    }


}
