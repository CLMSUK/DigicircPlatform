var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
var DigicircMatchmaking;
(function (DigicircMatchmaking) {
    var ViewModels;
    (function (ViewModels) {
        var ProcessForm;
        (function (ProcessForm) {
            var ProcessFormViewModel = /** @class */ (function (_super) {
                __extends(ProcessFormViewModel, _super);
                function ProcessFormViewModel() {
                    return _super.call(this) || this;
                }
                ProcessFormViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Process != null)
                        instance.Process = Process_ProcessViewModel._lightCast(instance.Process);
                    return instance;
                };
                ProcessFormViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new ProcessFormViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateProcessFormViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                ProcessFormViewModel.prototype._hydrateProcessFormViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateSymbiosisMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Process !== undefined)
                        this.Process = Process_ProcessViewModel._initializeFrom(original.Process, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = ProcessFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        ProcessFormViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                ProcessFormViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = ProcessFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    ProcessFormViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                ProcessFormViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DigicircMatchmaking.ViewModels.SymbiosisMasterPage.SymbiosisMasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                return ProcessFormViewModel;
            }(DigicircMatchmaking.ViewModels.SymbiosisMasterPage.SymbiosisMasterPageViewModel));
            ProcessForm.ProcessFormViewModel = ProcessFormViewModel;
            var Process_ProcessViewModel = /** @class */ (function (_super) {
                __extends(Process_ProcessViewModel, _super);
                function Process_ProcessViewModel() {
                    var _this = _super.call(this) || this;
                    _this.Product = new Array();
                    _this.Source = new Array();
                    return _this;
                }
                Process_ProcessViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Product != null) {
                        for (var i = 0; i < instance.Product.length; i++) {
                            instance.Product[i] = Process_Process_Product_MaterialViewModel._lightCast(instance.Product[i]);
                        }
                    }
                    if (instance.Source != null) {
                        for (var i = 0; i < instance.Source.length; i++) {
                            instance.Source[i] = Process_Process_Source_MaterialViewModel._lightCast(instance.Source[i]);
                        }
                    }
                    return instance;
                };
                Process_ProcessViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Process_ProcessViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateProcess_ProcessViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Process_ProcessViewModel.prototype._hydrateProcess_ProcessViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.Notes !== undefined)
                        this.Notes = original.Notes;
                    if (original.Ref !== undefined)
                        this.Ref = original.Ref;
                    if (original.Product != null) {
                        for (var i = 0; i < original.Product.length; i++) {
                            this.Product.push(Process_Process_Product_MaterialViewModel._initializeFrom(original.Product[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Source != null) {
                        for (var i = 0; i < original.Source.length; i++) {
                            this.Source.push(Process_Process_Source_MaterialViewModel._initializeFrom(original.Source[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Process_ProcessViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Process_ProcessViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Process_ProcessViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return Process_ProcessViewModel;
            }(BaseClass.ViewModel));
            ProcessForm.Process_ProcessViewModel = Process_ProcessViewModel;
            var Process_Process_Product_MaterialViewModel = /** @class */ (function (_super) {
                __extends(Process_Process_Product_MaterialViewModel, _super);
                function Process_Process_Product_MaterialViewModel() {
                    return _super.call(this) || this;
                }
                Process_Process_Product_MaterialViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Process_Process_Product_MaterialViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Process_Process_Product_MaterialViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateProcess_Process_Product_MaterialViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Process_Process_Product_MaterialViewModel.prototype._hydrateProcess_Process_Product_MaterialViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Process_Process_Product_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Process_Process_Product_MaterialViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Process_Process_Product_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return Process_Process_Product_MaterialViewModel;
            }(BaseClass.ViewModel));
            ProcessForm.Process_Process_Product_MaterialViewModel = Process_Process_Product_MaterialViewModel;
            var Process_Process_Source_MaterialViewModel = /** @class */ (function (_super) {
                __extends(Process_Process_Source_MaterialViewModel, _super);
                function Process_Process_Source_MaterialViewModel() {
                    return _super.call(this) || this;
                }
                Process_Process_Source_MaterialViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Process_Process_Source_MaterialViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Process_Process_Source_MaterialViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateProcess_Process_Source_MaterialViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Process_Process_Source_MaterialViewModel.prototype._hydrateProcess_Process_Source_MaterialViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Process_Process_Source_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Process_Process_Source_MaterialViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Process_Process_Source_MaterialViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return Process_Process_Source_MaterialViewModel;
            }(BaseClass.ViewModel));
            ProcessForm.Process_Process_Source_MaterialViewModel = Process_Process_Source_MaterialViewModel;
        })(ProcessForm = ViewModels.ProcessForm || (ViewModels.ProcessForm = {}));
    })(ViewModels = DigicircMatchmaking.ViewModels || (DigicircMatchmaking.ViewModels = {}));
})(DigicircMatchmaking || (DigicircMatchmaking = {}));
