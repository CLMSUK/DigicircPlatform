var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
var DigicircMatchmaking;
(function (DigicircMatchmaking) {
    var ViewModels;
    (function (ViewModels) {
        var RegisterForm;
        (function (RegisterForm) {
            var RegisterFormViewModel = /** @class */ (function (_super) {
                __extends(RegisterFormViewModel, _super);
                function RegisterFormViewModel() {
                    return _super.call(this) || this;
                }
                RegisterFormViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.DigicircUser != null)
                        instance.DigicircUser = DigicircUser_DigicircUserViewModel._lightCast(instance.DigicircUser);
                    return instance;
                };
                RegisterFormViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new RegisterFormViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateRegisterFormViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                RegisterFormViewModel.prototype._hydrateRegisterFormViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageSignInViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.DigicircUser !== undefined)
                        this.DigicircUser = DigicircUser_DigicircUserViewModel._initializeFrom(original.DigicircUser, ignoreReadOnlyProperties, context);
                    if (original.Password !== undefined)
                        this.Password = original.Password;
                    if (original.RetypePassword !== undefined)
                        this.RetypePassword = original.RetypePassword;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    if (original.AcceptTerms !== undefined)
                        this.AcceptTerms = original.AcceptTerms;
                    if (original.FromMatching !== undefined)
                        this.FromMatching = original.FromMatching;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = RegisterFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        RegisterFormViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                RegisterFormViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = RegisterFormViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    RegisterFormViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                RegisterFormViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    DigicircMatchmaking.ViewModels.MasterPageSignIn.MasterPageSignInViewModel._deleteDropDownInitialValues(reduced);
                };
                return RegisterFormViewModel;
            }(DigicircMatchmaking.ViewModels.MasterPageSignIn.MasterPageSignInViewModel));
            RegisterForm.RegisterFormViewModel = RegisterFormViewModel;
            var DigicircUser_DigicircUserViewModel = /** @class */ (function (_super) {
                __extends(DigicircUser_DigicircUserViewModel, _super);
                function DigicircUser_DigicircUserViewModel() {
                    var _this = _super.call(this) || this;
                    _this.Roles = new Array();
                    _this.Permissions = new Array();
                    return _this;
                }
                DigicircUser_DigicircUserViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Roles != null) {
                        for (var i = 0; i < instance.Roles.length; i++) {
                            instance.Roles[i] = DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel._lightCast(instance.Roles[i]);
                        }
                    }
                    if (instance.Permissions != null) {
                        for (var i = 0; i < instance.Permissions.length; i++) {
                            instance.Permissions[i] = DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel._lightCast(instance.Permissions[i]);
                        }
                    }
                    return instance;
                };
                DigicircUser_DigicircUserViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new DigicircUser_DigicircUserViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateDigicircUser_DigicircUserViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                DigicircUser_DigicircUserViewModel.prototype._hydrateDigicircUser_DigicircUserViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Email !== undefined)
                        this.Email = original.Email;
                    if (original.FirstName !== undefined)
                        this.FirstName = original.FirstName;
                    if (original.LastName !== undefined)
                        this.LastName = original.LastName;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.SubscribeToNewsLetter !== undefined)
                        this.SubscribeToNewsLetter = original.SubscribeToNewsLetter;
                    if (original.UserName !== undefined)
                        this.UserName = original.UserName;
                    if (original.Roles != null) {
                        for (var i = 0; i < original.Roles.length; i++) {
                            this.Roles.push(DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel._initializeFrom(original.Roles[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Permissions != null) {
                        for (var i = 0; i < original.Permissions.length; i++) {
                            this.Permissions.push(DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel._initializeFrom(original.Permissions[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = DigicircUser_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                DigicircUser_DigicircUserViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = DigicircUser_DigicircUserViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return DigicircUser_DigicircUserViewModel;
            }(BaseClass.ViewModel));
            RegisterForm.DigicircUser_DigicircUserViewModel = DigicircUser_DigicircUserViewModel;
            var DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel = /** @class */ (function (_super) {
                __extends(DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel, _super);
                function DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel() {
                    return _super.call(this) || this;
                }
                DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateDigicircUser_DigicircUser_Roles_ApplicationRoleViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel.prototype._hydrateDigicircUser_DigicircUser_Roles_ApplicationRoleViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.IsCustom !== undefined)
                        this.IsCustom = original.IsCustom;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel;
            }(BaseClass.ViewModel));
            RegisterForm.DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel = DigicircUser_DigicircUser_Roles_ApplicationRoleViewModel;
            var DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel = /** @class */ (function (_super) {
                __extends(DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel, _super);
                function DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel() {
                    return _super.call(this) || this;
                }
                DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateDigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel.prototype._hydrateDigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original._versionTimestamp !== undefined)
                        this._versionTimestamp = original._versionTimestamp;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.Description !== undefined)
                        this.Description = original.Description;
                    if (original.IsCustom !== undefined)
                        this.IsCustom = original.IsCustom;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel;
            }(BaseClass.ViewModel));
            RegisterForm.DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel = DigicircUser_DigicircUser_Permissions_ApplicationPermissionViewModel;
        })(RegisterForm = ViewModels.RegisterForm || (ViewModels.RegisterForm = {}));
    })(ViewModels = DigicircMatchmaking.ViewModels || (DigicircMatchmaking.ViewModels = {}));
})(DigicircMatchmaking || (DigicircMatchmaking = {}));
