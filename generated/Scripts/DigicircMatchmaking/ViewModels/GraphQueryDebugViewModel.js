var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Copyright (c) CLMS UK. All rights reserved.
// Licensed under the Custom License. See LICENSE file in the project root for full license information.
// This was autogenerated by zAppDev.
var DigicircMatchmaking;
(function (DigicircMatchmaking) {
    var ViewModels;
    (function (ViewModels) {
        var GraphQueryDebug;
        (function (GraphQueryDebug) {
            var GraphQueryDebugViewModel = /** @class */ (function (_super) {
                __extends(GraphQueryDebugViewModel, _super);
                function GraphQueryDebugViewModel() {
                    return _super.call(this) || this;
                }
                GraphQueryDebugViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Info != null)
                        instance.Info = Info_GraphDebugResultViewModel._lightCast(instance.Info);
                    return instance;
                };
                GraphQueryDebugViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new GraphQueryDebugViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateGraphQueryDebugViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                GraphQueryDebugViewModel.prototype._hydrateGraphQueryDebugViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    this._hydrateMasterPageViewModel(original, ignoreReadOnlyProperties, context);
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Info !== undefined)
                        this.Info = Info_GraphDebugResultViewModel._initializeFrom(original.Info, ignoreReadOnlyProperties, context);
                    if (original.CountryName !== undefined)
                        this.CountryName = original.CountryName;
                    if (original.IsExtended !== undefined)
                        this.IsExtended = original.IsExtended;
                    if (original.TextBox1__InitialSelection !== undefined)
                        this.TextBox1__InitialSelection = original.TextBox1__InitialSelection;
                    this.TextBox1SelectedItemKeys = original.TextBox1SelectedItemKeys;
                    this.ListNodesSelectedItemKeys = original.ListNodesSelectedItemKeys;
                    this.ListLinksSelectedItemKeys = original.ListLinksSelectedItemKeys;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = GraphQueryDebugViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        GraphQueryDebugViewModel._deleteDropDownInitialValues(reduced);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                GraphQueryDebugViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = GraphQueryDebugViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    GraphQueryDebugViewModel._deleteDropDownInitialValues(reduced);
                    return reduced;
                };
                GraphQueryDebugViewModel._deleteDropDownInitialValues = function (reduced) {
                    if (reduced == null)
                        return;
                    delete reduced.TextBox1__InitialSelection;
                    DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel._deleteDropDownInitialValues(reduced);
                };
                return GraphQueryDebugViewModel;
            }(DigicircMatchmaking.ViewModels.MasterPage.MasterPageViewModel));
            GraphQueryDebug.GraphQueryDebugViewModel = GraphQueryDebugViewModel;
            var Info_GraphDebugResultViewModel = /** @class */ (function (_super) {
                __extends(Info_GraphDebugResultViewModel, _super);
                function Info_GraphDebugResultViewModel() {
                    return _super.call(this) || this;
                }
                Info_GraphDebugResultViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Result != null)
                        instance.Result = Info_GraphDebugResult_Result_GraphBackendResponseViewModel._lightCast(instance.Result);
                    return instance;
                };
                Info_GraphDebugResultViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Info_GraphDebugResultViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInfo_GraphDebugResultViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Info_GraphDebugResultViewModel.prototype._hydrateInfo_GraphDebugResultViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Query !== undefined)
                        this.Query = original.Query;
                    if (original.RawResult !== undefined)
                        this.RawResult = original.RawResult;
                    if (original.Result !== undefined)
                        this.Result = Info_GraphDebugResult_Result_GraphBackendResponseViewModel._initializeFrom(original.Result, ignoreReadOnlyProperties, context);
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Info_GraphDebugResultViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Info_GraphDebugResultViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Info_GraphDebugResultViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return Info_GraphDebugResultViewModel;
            }(BaseClass.ViewModel));
            GraphQueryDebug.Info_GraphDebugResultViewModel = Info_GraphDebugResultViewModel;
            var Info_GraphDebugResult_Result_GraphBackendResponseViewModel = /** @class */ (function (_super) {
                __extends(Info_GraphDebugResult_Result_GraphBackendResponseViewModel, _super);
                function Info_GraphDebugResult_Result_GraphBackendResponseViewModel() {
                    var _this = _super.call(this) || this;
                    _this.Nodes = new Array();
                    _this.Links = new Array();
                    return _this;
                }
                Info_GraphDebugResult_Result_GraphBackendResponseViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    if (instance.Metadata != null)
                        instance.Metadata = Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._lightCast(instance.Metadata);
                    if (instance.Nodes != null) {
                        for (var i = 0; i < instance.Nodes.length; i++) {
                            instance.Nodes[i] = Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._lightCast(instance.Nodes[i]);
                        }
                    }
                    if (instance.Links != null) {
                        for (var i = 0; i < instance.Links.length; i++) {
                            instance.Links[i] = Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._lightCast(instance.Links[i]);
                        }
                    }
                    return instance;
                };
                Info_GraphDebugResult_Result_GraphBackendResponseViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Info_GraphDebugResult_Result_GraphBackendResponseViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInfo_GraphDebugResult_Result_GraphBackendResponseViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Info_GraphDebugResult_Result_GraphBackendResponseViewModel.prototype._hydrateInfo_GraphDebugResult_Result_GraphBackendResponseViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Metadata !== undefined)
                        this.Metadata = Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._initializeFrom(original.Metadata, ignoreReadOnlyProperties, context);
                    if (original.Nodes != null) {
                        for (var i = 0; i < original.Nodes.length; i++) {
                            this.Nodes.push(Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._initializeFrom(original.Nodes[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    if (original.Links != null) {
                        for (var i = 0; i < original.Links.length; i++) {
                            this.Links.push(Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._initializeFrom(original.Links[i], ignoreReadOnlyProperties, context));
                        }
                    }
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Info_GraphDebugResult_Result_GraphBackendResponseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Info_GraphDebugResult_Result_GraphBackendResponseViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Info_GraphDebugResult_Result_GraphBackendResponseViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return Info_GraphDebugResult_Result_GraphBackendResponseViewModel;
            }(BaseClass.ViewModel));
            GraphQueryDebug.Info_GraphDebugResult_Result_GraphBackendResponseViewModel = Info_GraphDebugResult_Result_GraphBackendResponseViewModel;
            var Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel = /** @class */ (function (_super) {
                __extends(Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel, _super);
                function Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel() {
                    return _super.call(this) || this;
                }
                Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel.prototype._hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.ExportDataAsJson !== undefined)
                        this.ExportDataAsJson = original.ExportDataAsJson;
                    if (original.Pages !== undefined)
                        this.Pages = original.Pages;
                    if (original.PageSize !== undefined)
                        this.PageSize = original.PageSize;
                    if (original.QueryElapsedTime !== undefined)
                        this.QueryElapsedTime = original.QueryElapsedTime;
                    if (original.TotalResponseElementsWithPositiveRelevanceLevel !== undefined)
                        this.TotalResponseElementsWithPositiveRelevanceLevel = original.TotalResponseElementsWithPositiveRelevanceLevel;
                    if (original.Elements !== undefined)
                        this.Elements = original.Elements;
                    if (original.Relations !== undefined)
                        this.Relations = original.Relations;
                    if (original.ExportType !== undefined)
                        this.ExportType = original.ExportType;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel;
            }(BaseClass.ViewModel));
            GraphQueryDebug.Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel = Info_GraphDebugResult_Result_GraphBackendResponse_Metadata_MetadataViewModel;
            var Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel = /** @class */ (function (_super) {
                __extends(Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel, _super);
                function Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel() {
                    return _super.call(this) || this;
                }
                Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel.prototype._hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Name !== undefined)
                        this.Name = original.Name;
                    if (original.Label !== undefined)
                        this.Label = original.Label;
                    if (original.LabelType !== undefined)
                        this.LabelType = original.LabelType;
                    if (original.Id !== undefined)
                        this.Id = original.Id;
                    if (original.Graphid !== undefined)
                        this.Graphid = original.Graphid;
                    if (original.CC !== undefined)
                        this.CC = original.CC;
                    if (original.SL !== undefined)
                        this.SL = original.SL;
                    if (original.CL !== undefined)
                        this.CL = original.CL;
                    if (original.RL !== undefined)
                        this.RL = original.RL;
                    if (original.IA !== undefined)
                        this.IA = original.IA;
                    if (original.AL !== undefined)
                        this.AL = original.AL;
                    if (original.AC !== undefined)
                        this.AC = original.AC;
                    if (original.Attr !== undefined)
                        this.Attr = original.Attr;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel;
            }(BaseClass.ViewModel));
            GraphQueryDebug.Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel = Info_GraphDebugResult_Result_GraphBackendResponse_Nodes_NodesViewModel;
            var Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel = /** @class */ (function (_super) {
                __extends(Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel, _super);
                function Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel() {
                    return _super.call(this) || this;
                }
                Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._lightCast = function (instance) {
                    if (instance == null)
                        return;
                    return instance;
                };
                Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._initializeFrom = function (original, ignoreReadOnlyProperties, context) {
                    if (ignoreReadOnlyProperties === void 0) { ignoreReadOnlyProperties = false; }
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return null;
                    // if (context.Has(original)) {
                    //    return context.Get(original);
                    // }
                    var result = new Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel();
                    if (context != null && context.fillDb == true) {
                        context.addToDb(original);
                    }
                    result._hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel(original, ignoreReadOnlyProperties, context);
                    // context.Add(original, result);
                    return result;
                };
                Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel.prototype._hydrateInfo_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel = function (original, ignoreReadOnlyProperties, context) {
                    if (context === void 0) { context = new Joove.DTOHelper(); }
                    if (original == null)
                        return;
                    if (original._key !== undefined)
                        this._key = original._key;
                    if (original._clientKey !== undefined)
                        this._clientKey = original._clientKey;
                    if (original._originalTypeClassName !== undefined)
                        this._originalTypeClassName = original._originalTypeClassName;
                    if (original._typeHash !== undefined)
                        this._typeHash = original._typeHash;
                    if (original.Source !== undefined)
                        this.Source = original.Source;
                    if (original.Target !== undefined)
                        this.Target = original.Target;
                    if (original.Type !== undefined)
                        this.Type = original.Type;
                    if (original.TypeRel !== undefined)
                        this.TypeRel = original.TypeRel;
                    if (original.Sid !== undefined)
                        this.Sid = original.Sid;
                    if (original.Tid !== undefined)
                        this.Tid = original.Tid;
                    if (original.Weight !== undefined)
                        this.Weight = original.Weight;
                    if (original.CL !== undefined)
                        this.CL = original.CL;
                    if (original.RL !== undefined)
                        this.RL = original.RL;
                    if (original.IA !== undefined)
                        this.IA = original.IA;
                    if (original.AL !== undefined)
                        this.AL = original.AL;
                    if (original.AC !== undefined)
                        this.AC = original.AC;
                    if (original.Attr !== undefined)
                        this.Attr = original.Attr;
                    this._reduceData = function (ignoreReadOnlyProperties) {
                        var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                        return reduced;
                    };
                }; /* end _initializeFrom() */
                Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel.prototype._reduceData = function (ignoreReadOnlyProperties) {
                    var reduced = Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel._initializeFrom(this, ignoreReadOnlyProperties);
                    return reduced;
                };
                return Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel;
            }(BaseClass.ViewModel));
            GraphQueryDebug.Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel = Info_GraphDebugResult_Result_GraphBackendResponse_Links_LinksViewModel;
        })(GraphQueryDebug = ViewModels.GraphQueryDebug || (ViewModels.GraphQueryDebug = {}));
    })(ViewModels = DigicircMatchmaking.ViewModels || (DigicircMatchmaking.ViewModels = {}));
})(DigicircMatchmaking || (DigicircMatchmaking = {}));
